syntax = "proto3";

package org.xrpl.rpc.v1;
option java_package = "org.xrpl.rpc.v1";
option java_multiple_files = true;

import "org/xrpl/rpc/v1/ledger_objects.proto";
import "org/xrpl/rpc/v1/common.proto";

// Next field: 5
message Meta
{
    // index in ledger
    uint64 transaction_index = 1 [jstype=JS_STRING];

    // result code indicating whether the transaction succeeded or failed
    TransactionResult transaction_result = 2;

   repeated AffectedNode affected_nodes = 3;

   DeliveredAmount delivered_amount = 4;
}

// Next field: 3
message TransactionResult
{
    // Next field: 7
    enum ResultType
    {
        RESULT_TYPE_UNSPECIFIED = 0;
        // Claimed cost only
        RESULT_TYPE_TEC         = 1;
        // Failure
        RESULT_TYPE_TEF         = 2;
        // Local error
        RESULT_TYPE_TEL         = 3;
        // Malformed transaction
        RESULT_TYPE_TEM         = 4;
        // Retry
        RESULT_TYPE_TER         = 5;
        // Success
        RESULT_TYPE_TES         = 6;
    }

    // category of the transaction result
    ResultType result_type = 1;

    // full result string, i.e. tesSUCCESS
    string result = 2;
}

// Next field: 6
message AffectedNode
{
    LedgerEntryType ledger_entry_type = 1;

    // 32 bytes
    bytes ledger_index = 2;

    oneof node
    {
        CreatedNode created_node = 3;
        DeletedNode deleted_node = 4;
        ModifiedNode modified_node = 5;
    }
}

// Next field: 2
message CreatedNode
{
    LedgerObject new_fields = 1;
}

// Next field: 2
message DeletedNode
{
    LedgerObject final_fields = 1;
}

// Next field: 5
message ModifiedNode {

    LedgerObject final_fields = 1;

    LedgerObject previous_fields = 2;

    PreviousTransactionID previous_transaction_id = 3;

    PreviousTransactionLedgerSequence previous_transaction_ledger_sequence = 4;
}
