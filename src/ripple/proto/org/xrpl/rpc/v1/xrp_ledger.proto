syntax = "proto3";

package org.xrpl.rpc.v1;
option java_package = "org.xrpl.rpc.v1";
option java_multiple_files = true;

import "org/xrpl/rpc/v1/get_account_info.proto";
import "org/xrpl/rpc/v1/get_fee.proto";
import "org/xrpl/rpc/v1/submit.proto";
import "org/xrpl/rpc/v1/get_transaction.proto";
import "org/xrpl/rpc/v1/get_account_transaction_history.proto";
import "org/xrpl/rpc/v1/get_ledger.proto";
import "org/xrpl/rpc/v1/get_ledger_entry.proto";
import "org/xrpl/rpc/v1/get_ledger_data.proto";
import "org/xrpl/rpc/v1/get_ledger_diff.proto";


// RPCs available to interact with the XRP Ledger.
// The gRPC API mimics the JSON API. Refer to xrpl.org for documentation
service XRPLedgerAPIService {

  // Get account info for an account on the XRP Ledger.
  rpc GetAccountInfo (GetAccountInfoRequest) returns (GetAccountInfoResponse);

  // Get the fee for a transaction on the XRP Ledger.
  rpc GetFee (GetFeeRequest) returns (GetFeeResponse);

  // Submit a signed transaction to the XRP Ledger.
  rpc SubmitTransaction (SubmitTransactionRequest) returns (SubmitTransactionResponse);

  // Get the status of a transaction
  rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse);

  // Get all validated transactions associated with a given account
  rpc GetAccountTransactionHistory(GetAccountTransactionHistoryRequest) returns (GetAccountTransactionHistoryResponse);

  /////////////////////////////////////////////////////////////////////////////
  // The below methods do not mimic the JSON API exactly, and are mostly binary

  // Get a specific ledger, optionally including transactions and any modified,
  // added or deleted ledger objects
  rpc GetLedger(GetLedgerRequest) returns (GetLedgerResponse);

  // Get a specific ledger object from a specific ledger
  rpc GetLedgerEntry(GetLedgerEntryRequest) returns (GetLedgerEntryResponse);

  // Iterate through all ledger objects in a specific ledger
  rpc GetLedgerData(GetLedgerDataRequest) returns (GetLedgerDataResponse);

  // Get all ledger objects that are different between the two specified
  // ledgers. Note, this method has no JSON equivalent.
  rpc GetLedgerDiff(GetLedgerDiffRequest) returns (GetLedgerDiffResponse);

}
