syntax = "proto3";

import "org/xrpl/rpc/v1/get_transaction.proto";
import "org/xrpl/rpc/v1/account.proto";
import "org/xrpl/rpc/v1/ledger.proto";

package org.xrpl.rpc.v1;
option java_package = "org.xrpl.rpc.v1";
option java_multiple_files = true;

// Next field: 8
message GetAccountTransactionHistoryRequest
{
    AccountAddress account = 1;

    // What ledger to include results from. Specifying a not yet validated
    // ledger results in an error. Not specifying a ledger uses the entire
    // range of validated ledgers available to the server.
    oneof ledger
    {
        LedgerSpecifier ledger_specifier = 2;
        LedgerRange ledger_range = 3;
    };

    // Return results as binary blobs. Defaults to false.
    bool binary = 4;

    // If set to true, returns values indexed by older ledger first.
    // Default to false.
    bool forward = 5;

    // Limit the number of results. Server may choose a lower limit.
    // If this value is 0, the limit is ignored and the number of results
    // returned is determined by the server
    uint32 limit = 6;

    // Marker to resume where previous request left off
    // Used for pagination
    Marker marker = 7;
}


// Next field: 8
message GetAccountTransactionHistoryResponse
{
    AccountAddress account = 1;

    uint32 ledger_index_min = 2;

    uint32 ledger_index_max = 3;

    uint32 limit = 4;

    Marker marker = 5;

    repeated GetTransactionResponse transactions = 6;

    bool validated = 7;
}

// Next field: 3
message Marker
{
    uint32 ledger_index = 1;

    uint32 account_sequence = 2;
}

