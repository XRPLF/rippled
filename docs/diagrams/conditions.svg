<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1663px" preserveAspectRatio="none" style="width:4445px;height:1663px;" version="1.1" viewBox="0 0 4445 1663" width="4445px" zoomAndPan="magnify"><defs><filter height="300%" id="f1ctuuqcu6bfxq" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="251" x="2101" y="16.708">Class Diagram for conditions</text><!--class C_0001602748540838302362--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="278.4844" id="C_0001602748540838302362" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="1397" y="1373.9531"/><ellipse cx="1494.25" cy="1389.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1497.2188,1395.5938 Q1496.6406,1395.8906 1496,1396.0313 Q1495.3594,1396.1875 1494.6563,1396.1875 Q1492.1563,1396.1875 1490.8281,1394.5469 Q1489.5156,1392.8906 1489.5156,1389.7656 Q1489.5156,1386.6406 1490.8281,1384.9844 Q1492.1563,1383.3281 1494.6563,1383.3281 Q1495.3594,1383.3281 1496,1383.4844 Q1496.6563,1383.6406 1497.2188,1383.9375 L1497.2188,1386.6563 Q1496.5938,1386.0781 1496,1385.8125 Q1495.4063,1385.5313 1494.7813,1385.5313 Q1493.4375,1385.5313 1492.75,1386.6094 Q1492.0625,1387.6719 1492.0625,1389.7656 Q1492.0625,1391.8594 1492.75,1392.9375 Q1493.4375,1394 1494.7813,1394 Q1495.4063,1394 1496,1393.7344 Q1496.5938,1393.4531 1497.2188,1392.875 L1497.2188,1395.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="1514.75" y="1394.1074">Slice</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1398" x2="1628" y1="1405.9531" y2="1405.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1398" x2="1628" y1="1413.9531" y2="1413.9531"/><ellipse cx="1408" cy="1425.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1417" y="1428.1636">Slice() = default : void</text><ellipse cx="1408" cy="1438.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1417" y="1440.9683">Slice() = default : void</text><ellipse cx="1408" cy="1451.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="1417" y="1453.7729">operator=() = default : Slice &amp;</text><ellipse cx="1408" cy="1464.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="1417" y="1466.5776">Slice() : void</text><ellipse cx="1408" cy="1477.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1417" y="1479.3823">empty() const : bool</text><ellipse cx="1408" cy="1489.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1417" y="1492.187">size() const : std::size_t</text><ellipse cx="1408" cy="1502.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1417" y="1504.9917">length() const : std::size_t</text><ellipse cx="1408" cy="1515.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1417" y="1517.7964">data() const : const std::uint8_t *</text><ellipse cx="1408" cy="1528.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="1417" y="1530.6011">operator[]() const : std::uint8_t</text><ellipse cx="1408" cy="1541.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="1417" y="1543.4058">operator+=() : Slice &amp;</text><ellipse cx="1408" cy="1553.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1417" y="1556.2104">operator+() const : Slice</text><ellipse cx="1408" cy="1566.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1417" y="1569.0151">remove_prefix() : void</text><ellipse cx="1408" cy="1579.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1417" y="1581.8198">remove_suffix() : void</text><ellipse cx="1408" cy="1592.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="1417" y="1594.6245">begin() const : Slice::const_iterator</text><ellipse cx="1408" cy="1605.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1417" y="1607.4292">cbegin() const : Slice::const_iterator</text><ellipse cx="1408" cy="1617.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="1417" y="1620.2339">end() const : Slice::const_iterator</text><ellipse cx="1408" cy="1630.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1417" y="1633.0386">cend() const : Slice::const_iterator</text><ellipse cx="1408" cy="1643.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1417" y="1645.8433">substr() const : Slice</text><!--class C_0002153069467650067693--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="316.8984" id="C_0002153069467650067693" style="stroke: #A80036; stroke-width: 1.5;" width="240" x="1180" y="995.9531"/><ellipse cx="1277.25" cy="1011.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1280.2188,1017.5938 Q1279.6406,1017.8906 1279,1018.0313 Q1278.3594,1018.1875 1277.6563,1018.1875 Q1275.1563,1018.1875 1273.8281,1016.5469 Q1272.5156,1014.8906 1272.5156,1011.7656 Q1272.5156,1008.6406 1273.8281,1006.9844 Q1275.1563,1005.3281 1277.6563,1005.3281 Q1278.3594,1005.3281 1279,1005.4844 Q1279.6563,1005.6406 1280.2188,1005.9375 L1280.2188,1008.6563 Q1279.5938,1008.0781 1279,1007.8125 Q1278.4063,1007.5313 1277.7813,1007.5313 Q1276.4375,1007.5313 1275.75,1008.6094 Q1275.0625,1009.6719 1275.0625,1011.7656 Q1275.0625,1013.8594 1275.75,1014.9375 Q1276.4375,1016 1277.7813,1016 Q1278.4063,1016 1279,1015.7344 Q1279.5938,1015.4531 1280.2188,1014.875 L1280.2188,1017.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="1297.75" y="1016.1074">Buffer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1181" x2="1419" y1="1027.9531" y2="1027.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1181" x2="1419" y1="1035.9531" y2="1035.9531"/><ellipse cx="1191" cy="1047.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1200" y="1050.1636">Buffer() = default : void</text><ellipse cx="1191" cy="1060.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1200" y="1062.9683">Buffer() : void</text><ellipse cx="1191" cy="1073.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1200" y="1075.7729">Buffer() : void</text><ellipse cx="1191" cy="1086.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1200" y="1088.5776">Buffer() : void</text><ellipse cx="1191" cy="1099.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1200" y="1101.3823">operator=() : Buffer &amp;</text><ellipse cx="1191" cy="1111.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1200" y="1114.187">Buffer() : void</text><ellipse cx="1191" cy="1124.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1200" y="1126.9917">operator=() : Buffer &amp;</text><ellipse cx="1191" cy="1137.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1200" y="1139.7964">Buffer() : void</text><ellipse cx="1191" cy="1150.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="1200" y="1152.6011">operator=() : Buffer &amp;</text><ellipse cx="1191" cy="1163.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1200" y="1165.4058">size() const : std::size_t</text><ellipse cx="1191" cy="1175.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1200" y="1178.2104">empty() const : bool</text><ellipse cx="1191" cy="1188.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1200" y="1191.0151">operator Slice() const : Slice</text><ellipse cx="1191" cy="1201.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1200" y="1203.8198">data() const : const std::uint8_t *</text><ellipse cx="1191" cy="1214.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="1200" y="1216.6245">data() : std::uint8_t *</text><ellipse cx="1191" cy="1227.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1200" y="1229.4292">clear() : void</text><ellipse cx="1191" cy="1239.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1200" y="1242.2339">alloc() : std::uint8_t *</text><ellipse cx="1191" cy="1252.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1200" y="1255.0386">operator()() : void *</text><ellipse cx="1191" cy="1265.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1200" y="1267.8433">begin() const : Buffer::const_iterator</text><ellipse cx="1191" cy="1278.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="1200" y="1280.6479">cbegin() const : Buffer::const_iterator</text><ellipse cx="1191" cy="1291.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1200" y="1293.4526">end() const : Buffer::const_iterator</text><ellipse cx="1191" cy="1303.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="1200" y="1306.2573">cend() const : Buffer::const_iterator</text><!--class C_0000110916603091449172--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="265.6797" id="C_0000110916603091449172" style="stroke: #A80036; stroke-width: 1.5;" width="175" x="49.5" y="28.9531"/><ellipse cx="64.5" cy="44.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M68.6094,50.9531 L60.8906,50.9531 L60.8906,38.5625 L68.6094,38.5625 L68.6094,40.7188 L63.3438,40.7188 L63.3438,43.3906 L68.1094,43.3906 L68.1094,45.5469 L63.3438,45.5469 L63.3438,48.7969 L68.6094,48.7969 L68.6094,50.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="78.5" y="49.1074">cryptoconditions::error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50.5" x2="223.5" y1="60.9531" y2="60.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="55.5" y="75.1636">generic</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="55.5" y="87.9683">unsupported_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="55.5" y="100.7729">unsupported_subtype</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="55.5" y="113.5776">unknown_type</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="55.5" y="126.3823">unknown_subtype</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="55.5" y="139.187">fingerprint_size</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="55.5" y="151.9917">incorrect_encoding</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="55.5" y="164.7964">trailing_garbage</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="55.5" y="177.6011">buffer_empty</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="55.5" y="190.4058">buffer_overfull</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="55.5" y="203.2104">buffer_underfull</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="55.5" y="216.0151">malformed_encoding</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="55.5" y="228.8198">short_preamble</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="55.5" y="241.6245">unexpected_tag</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="55.5" y="254.4292">long_tag</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="55.5" y="267.2339">large_size</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="55.5" y="280.0386">preimage_too_long</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="50.5" x2="223.5" y1="286.6328" y2="286.6328"/><!--class C_0001162300429665963796--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="99.2188" id="C_0001162300429665963796" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="260" y="112.4531"/><ellipse cx="275" cy="128.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M277.9688,134.0938 Q277.3906,134.3906 276.75,134.5313 Q276.1094,134.6875 275.4063,134.6875 Q272.9063,134.6875 271.5781,133.0469 Q270.2656,131.3906 270.2656,128.2656 Q270.2656,125.1406 271.5781,123.4844 Q272.9063,121.8281 275.4063,121.8281 Q276.1094,121.8281 276.75,121.9844 Q277.4063,122.1406 277.9688,122.4375 L277.9688,125.1563 Q277.3438,124.5781 276.75,124.3125 Q276.1563,124.0313 275.5313,124.0313 Q274.1875,124.0313 273.5,125.1094 Q272.8125,126.1719 272.8125,128.2656 Q272.8125,130.3594 273.5,131.4375 Q274.1875,132.5 275.5313,132.5 Q276.1563,132.5 276.75,132.2344 Q277.3438,131.9531 277.9688,131.375 L277.9688,134.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="289" y="132.6074">cryptoconditions::der::Preamble</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="261" x2="491" y1="144.4531" y2="144.4531"/><ellipse cx="271" cy="156.3555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="280" y="158.6636">type : std::uint8_t</text><ellipse cx="271" cy="169.1602" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="280" y="171.4683">tag : std::size_t</text><ellipse cx="271" cy="181.9648" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="280" y="184.2729">length : std::size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="261" x2="491" y1="190.8672" y2="190.8672"/><ellipse cx="271" cy="202.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="280" y="205.0776">Preamble() = default : void</text><!--class C_0001857952901522980788--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="112.0234" id="C_0001857952901522980788" style="stroke: #A80036; stroke-width: 1.5;" width="173" x="1743.5" y="1098.4531"/><ellipse cx="1758.5" cy="1114.4531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1762.6094,1120.4531 L1754.8906,1120.4531 L1754.8906,1108.0625 L1762.6094,1108.0625 L1762.6094,1110.2188 L1757.3438,1110.2188 L1757.3438,1112.8906 L1762.1094,1112.8906 L1762.1094,1115.0469 L1757.3438,1115.0469 L1757.3438,1118.2969 L1762.6094,1118.2969 L1762.6094,1120.4531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="141" x="1772.5" y="1118.6074">cryptoconditions::Type</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1744.5" x2="1915.5" y1="1130.4531" y2="1130.4531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1749.5" y="1144.6636">preimageSha256</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1749.5" y="1157.4683">prefixSha256</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="1749.5" y="1170.2729">thresholdSha256</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="1749.5" y="1183.0776">rsaSha256</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="1749.5" y="1195.8823">ed25519Sha256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1744.5" x2="1915.5" y1="1202.4766" y2="1202.4766"/><!--class C_0000623272287488884477--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="163.2422" id="C_0000623272287488884477" style="stroke: #A80036; stroke-width: 1.5;" width="264" x="1399" y="563.9531"/><ellipse cx="1441.45" cy="579.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1444.4188,585.5938 Q1443.8406,585.8906 1443.2,586.0313 Q1442.5594,586.1875 1441.8563,586.1875 Q1439.3563,586.1875 1438.0281,584.5469 Q1436.7156,582.8906 1436.7156,579.7656 Q1436.7156,576.6406 1438.0281,574.9844 Q1439.3563,573.3281 1441.8563,573.3281 Q1442.5594,573.3281 1443.2,573.4844 Q1443.8563,573.6406 1444.4188,573.9375 L1444.4188,576.6563 Q1443.7938,576.0781 1443.2,575.8125 Q1442.6063,575.5313 1441.9813,575.5313 Q1440.6375,575.5313 1439.95,576.6094 Q1439.2625,577.6719 1439.2625,579.7656 Q1439.2625,581.8594 1439.95,582.9375 Q1440.6375,584 1441.9813,584 Q1442.6063,584 1443.2,583.7344 Q1443.7938,583.4531 1444.4188,582.875 L1444.4188,585.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="171" x="1461.55" y="584.1074">cryptoconditions::Condition</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1400" x2="1662" y1="595.9531" y2="595.9531"/><ellipse cx="1410" cy="607.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1419" y="610.1636">cost : std::uint32_t</text><ellipse cx="1410" cy="620.6602" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="237" x="1419" y="622.9683">maxSerializedCondition : const std::size_t</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1419" x2="1656" y1="624.9683" y2="624.9683"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1400" x2="1662" y1="629.5625" y2="629.5625"/><ellipse cx="1410" cy="641.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="238" x="1419" y="643.7729">deserialize() : std::unique_ptr&lt;Condition&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1419" x2="1657" y1="645.7729" y2="645.7729"/><ellipse cx="1410" cy="654.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1419" y="656.5776">Condition() : void</text><ellipse cx="1410" cy="667.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1419" y="669.3823">Condition() : void</text><ellipse cx="1410" cy="679.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1419" y="682.187">~Condition() = default : void</text><ellipse cx="1410" cy="692.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1419" y="694.9917">Condition() = default : void</text><ellipse cx="1410" cy="705.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="1419" y="707.7964">Condition() = default : void</text><ellipse cx="1410" cy="718.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1419" y="720.6011">Condition() : void</text><!--class C_0000141408528822188088--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="150.4375" id="C_0000141408528822188088" style="stroke: #A80036; stroke-width: 1.5;" width="310" x="1469" y="86.9531"/><ellipse cx="1532.25" cy="102.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1532.3594,98.2969 L1531.2031,103.375 L1533.5313,103.375 L1532.3594,98.2969 Z M1530.875,96.0625 L1533.8594,96.0625 L1537.2188,108.4531 L1534.7656,108.4531 L1534,105.3906 L1530.7188,105.3906 L1529.9688,108.4531 L1527.5313,108.4531 L1530.875,96.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="1552.75" y="107.1074">cryptoconditions::Fulfillment</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1470" x2="1778" y1="118.9531" y2="118.9531"/><ellipse cx="1480" cy="130.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="242" x="1489" y="133.1636">maxSerializedFulfillment : const std::size_t</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1489" x2="1731" y1="135.1636" y2="135.1636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1470" x2="1778" y1="139.7578" y2="139.7578"/><ellipse cx="1480" cy="151.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="243" x="1489" y="153.9683">deserialize() : std::unique_ptr&lt;Fulfillment&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1489" x2="1732" y1="155.9683" y2="155.9683"/><ellipse cx="1480" cy="164.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="1489" y="166.7729">~Fulfillment() = default : void</text><ellipse cx="1480" cy="177.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="173" x="1489" y="179.5776">fingerprint() const = 0 : Buffer</text><ellipse cx="1480" cy="190.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="231" x="1489" y="192.3823">type() const = 0 : cryptoconditions::Type</text><ellipse cx="1480" cy="202.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="147" x="1489" y="205.187">validate() const = 0 : bool</text><ellipse cx="1480" cy="215.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="174" x="1489" y="217.9917">cost() const = 0 : std::uint32_t</text><ellipse cx="1480" cy="228.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="284" x="1489" y="230.7964">condition() const = 0 : cryptoconditions::Condition</text><!--class C_0001004919123456394230--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="163.2422" id="C_0001004919123456394230" style="stroke: #A80036; stroke-width: 1.5;" width="286" x="1057" y="563.9531"/><ellipse cx="1087.75" cy="579.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1090.7188,585.5938 Q1090.1406,585.8906 1089.5,586.0313 Q1088.8594,586.1875 1088.1563,586.1875 Q1085.6563,586.1875 1084.3281,584.5469 Q1083.0156,582.8906 1083.0156,579.7656 Q1083.0156,576.6406 1084.3281,574.9844 Q1085.6563,573.3281 1088.1563,573.3281 Q1088.8594,573.3281 1089.5,573.4844 Q1090.1563,573.6406 1090.7188,573.9375 L1090.7188,576.6563 Q1090.0938,576.0781 1089.5,575.8125 Q1088.9063,575.5313 1088.2813,575.5313 Q1086.9375,575.5313 1086.25,576.6094 Q1085.5625,577.6719 1085.5625,579.7656 Q1085.5625,581.8594 1086.25,582.9375 Q1086.9375,584 1088.2813,584 Q1088.9063,584 1089.5,583.7344 Q1090.0938,583.4531 1090.7188,582.875 L1090.7188,585.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="219" x="1105.25" y="584.1074">cryptoconditions::PreimageSha256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1058" x2="1342" y1="595.9531" y2="595.9531"/><ellipse cx="1068" cy="607.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="1077" y="610.1636">maxPreimageLength : const std::size_t</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1077" x2="1298" y1="612.1636" y2="612.1636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1058" x2="1342" y1="616.7578" y2="616.7578"/><ellipse cx="1068" cy="628.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="243" x="1077" y="630.9683">deserialize() : std::unique_ptr&lt;Fulfillment&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="1077" x2="1320" y1="632.9683" y2="632.9683"/><ellipse cx="1068" cy="641.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1077" y="643.7729">PreimageSha256() : void</text><ellipse cx="1068" cy="654.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1077" y="656.5776">PreimageSha256() : void</text><ellipse cx="1068" cy="667.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="1077" y="669.3823">type() const : cryptoconditions::Type</text><ellipse cx="1068" cy="679.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1077" y="682.187">fingerprint() const : Buffer</text><ellipse cx="1068" cy="692.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1077" y="694.9917">cost() const : std::uint32_t</text><ellipse cx="1068" cy="705.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="1077" y="707.7964">condition() const : cryptoconditions::Condition</text><ellipse cx="1068" cy="718.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1077" y="720.6011">validate() const : bool</text><!--class C_0001180273605615681717--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="124.8281" id="C_0001180273605615681717" style="stroke: #A80036; stroke-width: 1.5;" width="389" x="527.5" y="99.4531"/><ellipse cx="542.5" cy="115.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M545.4688,121.0938 Q544.8906,121.3906 544.25,121.5313 Q543.6094,121.6875 542.9063,121.6875 Q540.4063,121.6875 539.0781,120.0469 Q537.7656,118.3906 537.7656,115.2656 Q537.7656,112.1406 539.0781,110.4844 Q540.4063,108.8281 542.9063,108.8281 Q543.6094,108.8281 544.25,108.9844 Q544.9063,109.1406 545.4688,109.4375 L545.4688,112.1563 Q544.8438,111.5781 544.25,111.3125 Q543.6563,111.0313 543.0313,111.0313 Q541.6875,111.0313 541,112.1094 Q540.3125,113.1719 540.3125,115.2656 Q540.3125,117.3594 541,118.4375 Q541.6875,119.5 543.0313,119.5 Q543.6563,119.5 544.25,119.2344 Q544.8438,118.9531 545.4688,118.375 L545.4688,121.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="357" x="556.5" y="119.6074">cryptoconditions::detail::cryptoconditions_error_category</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="528.5" x2="915.5" y1="131.4531" y2="131.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="528.5" x2="915.5" y1="139.4531" y2="139.4531"/><ellipse cx="538.5" cy="151.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="547.5" y="153.6636">cryptoconditions_error_category() = default : void</text><ellipse cx="538.5" cy="164.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="547.5" y="166.4683">name() const : const char *</text><ellipse cx="538.5" cy="176.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="547.5" y="179.2729">message() const : std::string</text><ellipse cx="538.5" cy="189.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="298" x="547.5" y="192.0776">default_error_condition() const : std::error_condition</text><ellipse cx="538.5" cy="202.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="547.5" y="204.8823">equivalent() const : bool</text><ellipse cx="538.5" cy="215.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="547.5" y="217.687">equivalent() const : bool</text><!--class C_0001596544969333807924--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="60.8047" id="C_0001596544969333807924" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="951.5" y="131.4531"/><ellipse cx="976.85" cy="147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M979.8188,153.0938 Q979.2406,153.3906 978.6,153.5313 Q977.9594,153.6875 977.2563,153.6875 Q974.7563,153.6875 973.4281,152.0469 Q972.1156,150.3906 972.1156,147.2656 Q972.1156,144.1406 973.4281,142.4844 Q974.7563,140.8281 977.2563,140.8281 Q977.9594,140.8281 978.6,140.9844 Q979.2563,141.1406 979.8188,141.4375 L979.8188,144.1563 Q979.1938,143.5781 978.6,143.3125 Q978.0063,143.0313 977.3813,143.0313 Q976.0375,143.0313 975.35,144.1094 Q974.6625,145.1719 974.6625,147.2656 Q974.6625,149.3594 975.35,150.4375 Q976.0375,151.5 977.3813,151.5 Q978.0063,151.5 978.6,151.2344 Q979.1938,150.9531 979.8188,150.375 L979.8188,153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="138" x="993.15" y="151.6074">bad_expected_access</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="952.5" x2="1143.5" y1="163.4531" y2="163.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="952.5" x2="1143.5" y1="171.4531" y2="171.4531"/><ellipse cx="962.5" cy="183.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="971.5" y="185.6636">bad_expected_access() : void</text><!--class C_0002219031497374695928--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="86.4141" id="C_0002219031497374695928" style="stroke: #A80036; stroke-width: 1.5;" width="193" x="40.5" y="602.4531"/><ellipse cx="74.4" cy="618.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M77.3688,624.0938 Q76.7906,624.3906 76.15,624.5313 Q75.5094,624.6875 74.8063,624.6875 Q72.3063,624.6875 70.9781,623.0469 Q69.6656,621.3906 69.6656,618.2656 Q69.6656,615.1406 70.9781,613.4844 Q72.3063,611.8281 74.8063,611.8281 Q75.5094,611.8281 76.15,611.9844 Q76.8063,612.1406 77.3688,612.4375 L77.3688,615.1563 Q76.7438,614.5781 76.15,614.3125 Q75.5563,614.0313 74.9313,614.0313 Q73.5875,614.0313 72.9,615.1094 Q72.2125,616.1719 72.2125,618.2656 Q72.2125,620.3594 72.9,621.4375 Q73.5875,622.5 74.9313,622.5 Q75.5563,622.5 76.15,622.2344 Q76.7438,621.9531 77.3688,621.375 L77.3688,624.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="119" x="92.6" y="622.6074">detail::throw_policy</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="41.5" x2="232.5" y1="634.4531" y2="634.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="41.5" x2="232.5" y1="642.4531" y2="642.4531"/><ellipse cx="51.5" cy="654.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="60.5" y="656.6636">wide_value_check() : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="60.5" x2="203.5" y1="658.6636" y2="658.6636"/><ellipse cx="51.5" cy="667.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="142" x="60.5" y="669.4683">wide_error_check() : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="60.5" x2="202.5" y1="671.4683" y2="671.4683"/><ellipse cx="51.5" cy="679.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="167" x="60.5" y="682.2729">wide_exception_check() : void</text><line style="stroke: #000000; stroke-width: 1.0;" x1="60.5" x2="227.5" y1="684.2729" y2="684.2729"/><!--class C_0000051815775375752491--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="48" id="C_0000051815775375752491" style="stroke: #A80036; stroke-width: 1.5;" width="296" x="1948" y="621.4531"/><ellipse cx="1963" cy="637.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1965.9688,643.0938 Q1965.3906,643.3906 1964.75,643.5313 Q1964.1094,643.6875 1963.4063,643.6875 Q1960.9063,643.6875 1959.5781,642.0469 Q1958.2656,640.3906 1958.2656,637.2656 Q1958.2656,634.1406 1959.5781,632.4844 Q1960.9063,630.8281 1963.4063,630.8281 Q1964.1094,630.8281 1964.75,630.9844 Q1965.4063,631.1406 1965.9688,631.4375 L1965.9688,634.1563 Q1965.3438,633.5781 1964.75,633.3125 Q1964.1563,633.0313 1963.5313,633.0313 Q1962.1875,633.0313 1961.5,634.1094 Q1960.8125,635.1719 1960.8125,637.2656 Q1960.8125,639.3594 1961.5,640.4375 Q1962.1875,641.5 1963.5313,641.5 Q1964.1563,641.5 1964.75,641.2344 Q1965.3438,640.9531 1965.9688,640.375 L1965.9688,643.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="195" x="1977" y="641.6074">detail::is_contiguous_container</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="67" x="2180" y="618.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="65" x="2181" y="630.5918">Container,</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1949" x2="2243" y1="653.4531" y2="653.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1949" x2="2243" y1="661.4531" y2="661.4531"/><!--class C_0000770976208116654116--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="48" id="C_0000770976208116654116" style="stroke: #A80036; stroke-width: 1.5;" width="227" x="268.5" y="621.4531"/><ellipse cx="283.5" cy="637.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M286.4688,643.0938 Q285.8906,643.3906 285.25,643.5313 Q284.6094,643.6875 283.9063,643.6875 Q281.4063,643.6875 280.0781,642.0469 Q278.7656,640.3906 278.7656,637.2656 Q278.7656,634.1406 280.0781,632.4844 Q281.4063,630.8281 283.9063,630.8281 Q284.6094,630.8281 285.25,630.9844 Q285.9063,631.1406 286.4688,631.4375 L286.4688,634.1563 Q285.8438,633.5781 285.25,633.3125 Q284.6563,633.0313 284.0313,633.0313 Q282.6875,633.0313 282,634.1094 Q281.3125,635.1719 281.3125,637.2656 Q281.3125,639.3594 282,640.4375 Q282.6875,641.5 284.0313,641.5 Q284.6563,641.5 285.25,641.2344 Q285.8438,640.9531 286.4688,640.375 L286.4688,643.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="195" x="297.5" y="641.6074">detail::is_contiguous_container</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="269.5" x2="494.5" y1="653.4531" y2="653.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="269.5" x2="494.5" y1="661.4531" y2="661.4531"/><!--class C_0000898949948555513083--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="48" id="C_0000898949948555513083" style="stroke: #A80036; stroke-width: 1.5;" width="321" x="1935.5" y="137.9531"/><ellipse cx="1950.5" cy="153.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1953.4688,159.5938 Q1952.8906,159.8906 1952.25,160.0313 Q1951.6094,160.1875 1950.9063,160.1875 Q1948.4063,160.1875 1947.0781,158.5469 Q1945.7656,156.8906 1945.7656,153.7656 Q1945.7656,150.6406 1947.0781,148.9844 Q1948.4063,147.3281 1950.9063,147.3281 Q1951.6094,147.3281 1952.25,147.4844 Q1952.9063,147.6406 1953.4688,147.9375 L1953.4688,150.6563 Q1952.8438,150.0781 1952.25,149.8125 Q1951.6563,149.5313 1951.0313,149.5313 Q1949.6875,149.5313 1949,150.6094 Q1948.3125,151.6719 1948.3125,153.7656 Q1948.3125,155.8594 1949,156.9375 Q1949.6875,158 1951.0313,158 Q1951.6563,158 1952.25,157.7344 Q1952.8438,157.4531 1953.4688,156.875 L1953.4688,159.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="195" x="1964.5" y="158.1074">detail::is_contiguous_container</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="92" x="2167.5" y="134.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="90" x="2168.5" y="147.0918">Container,void</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936.5" x2="2255.5" y1="169.9531" y2="169.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1936.5" x2="2255.5" y1="177.9531" y2="177.9531"/><!--class C_0000304197526022160872--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="99.2188" id="C_0000304197526022160872" style="stroke: #A80036; stroke-width: 1.5;" width="415" x="2291.5" y="112.4531"/><ellipse cx="2348.25" cy="128.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2351.2188,134.0938 Q2350.6406,134.3906 2350,134.5313 Q2349.3594,134.6875 2348.6563,134.6875 Q2346.1563,134.6875 2344.8281,133.0469 Q2343.5156,131.3906 2343.5156,128.2656 Q2343.5156,125.1406 2344.8281,123.4844 Q2346.1563,121.8281 2348.6563,121.8281 Q2349.3594,121.8281 2350,121.9844 Q2350.6563,122.1406 2351.2188,122.4375 L2351.2188,125.1563 Q2350.5938,124.5781 2350,124.3125 Q2349.4063,124.0313 2348.7813,124.0313 Q2347.4375,124.0313 2346.75,125.1094 Q2346.0625,126.1719 2346.0625,128.2656 Q2346.0625,130.3594 2346.75,131.4375 Q2347.4375,132.5 2348.7813,132.5 Q2349.4063,132.5 2350,132.2344 Q2350.5938,131.9531 2351.2188,131.375 L2351.2188,134.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="208" x="2368.75" y="132.6074">detail::basic_sha512_half_hasher</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="83" x="2626.5" y="109.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="81" x="2627.5" y="121.5918">_Bool Secure</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2292.5" x2="2705.5" y1="144.4531" y2="144.4531"/><ellipse cx="2302.5" cy="156.3555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="2311.5" y="158.6636">endian : const boost::endian::order</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2311.5" x2="2513.5" y1="160.6636" y2="160.6636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2292.5" x2="2705.5" y1="165.2578" y2="165.2578"/><ellipse cx="2302.5" cy="177.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="2311.5" y="179.4683">~basic_sha512_half_hasher&lt;Secure&gt;() : void</text><ellipse cx="2302.5" cy="189.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2311.5" y="192.2729">operator()() : void</text><ellipse cx="2302.5" cy="202.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="2311.5" y="205.0776">operator base_uint() : detail::basic_sha512_half_hasher::result_type</text><!--class C_0000704939383398036480--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="137.6328" id="C_0000704939383398036480" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="530.5" y="576.4531"/><ellipse cx="571.6" cy="592.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M574.5688,598.0938 Q573.9906,598.3906 573.35,598.5313 Q572.7094,598.6875 572.0063,598.6875 Q569.5063,598.6875 568.1781,597.0469 Q566.8656,595.3906 566.8656,592.2656 Q566.8656,589.1406 568.1781,587.4844 Q569.5063,585.8281 572.0063,585.8281 Q572.7094,585.8281 573.35,585.9844 Q574.0063,586.1406 574.5688,586.4375 L574.5688,589.1563 Q573.9438,588.5781 573.35,588.3125 Q572.7563,588.0313 572.1313,588.0313 Q570.7875,588.0313 570.1,589.1094 Q569.4125,590.1719 569.4125,592.2656 Q569.4125,594.3594 570.1,595.4375 Q570.7875,596.5 572.1313,596.5 Q572.7563,596.5 573.35,596.2344 Q573.9438,595.9531 574.5688,595.375 L574.5688,598.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="75" x="591.4" y="596.6074">Unexpected</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="10" x="700.5" y="573.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="8" x="701.5" y="585.5918">E</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="531.5" x2="706.5" y1="608.4531" y2="608.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="531.5" x2="706.5" y1="616.4531" y2="616.4531"/><ellipse cx="541.5" cy="628.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="550.5" y="630.6636">Unexpected&lt;E&gt;() : void</text><ellipse cx="541.5" cy="641.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="550.5" y="643.4683">Unexpected&lt;E&gt;() : void</text><ellipse cx="541.5" cy="653.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="550.5" y="656.2729">Unexpected&lt;E&gt;() : void</text><ellipse cx="541.5" cy="666.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="550.5" y="669.0776">value() const : const E &amp;</text><ellipse cx="541.5" cy="679.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="550.5" y="681.8823">value() : E &amp;</text><ellipse cx="541.5" cy="692.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="550.5" y="694.687">value() : E &amp;&amp;</text><ellipse cx="541.5" cy="705.1836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="550.5" y="707.4917">value() const : const E &amp;&amp;</text><!--class C_0002158785723697762442--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="201.6563" id="C_0002158785723697762442" style="stroke: #A80036; stroke-width: 1.5;" width="195" x="2783.5" y="544.4531"/><ellipse cx="2836.25" cy="560.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2839.2188,566.0938 Q2838.6406,566.3906 2838,566.5313 Q2837.3594,566.6875 2836.6563,566.6875 Q2834.1563,566.6875 2832.8281,565.0469 Q2831.5156,563.3906 2831.5156,560.2656 Q2831.5156,557.1406 2832.8281,555.4844 Q2834.1563,553.8281 2836.6563,553.8281 Q2837.3594,553.8281 2838,553.9844 Q2838.6563,554.1406 2839.2188,554.4375 L2839.2188,557.1563 Q2838.5938,556.5781 2838,556.3125 Q2837.4063,556.0313 2836.7813,556.0313 Q2835.4375,556.0313 2834.75,557.1094 Q2834.0625,558.1719 2834.0625,560.2656 Q2834.0625,562.3594 2834.75,563.4375 Q2835.4375,564.5 2836.7813,564.5 Q2837.4063,564.5 2838,564.2344 Q2838.5938,563.9531 2839.2188,563.375 L2839.2188,566.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="2856.75" y="564.6074">Expected</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="21" x="2960.5" y="541.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="19" x="2961.5" y="553.5918">T,E</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2784.5" x2="2977.5" y1="576.4531" y2="576.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2784.5" x2="2977.5" y1="584.4531" y2="584.4531"/><ellipse cx="2794.5" cy="596.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="2803.5" y="598.6636">has_value() const : bool</text><ellipse cx="2794.5" cy="609.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2803.5" y="611.4683">value() const : const T &amp;</text><ellipse cx="2794.5" cy="621.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="2803.5" y="624.2729">value() : T &amp;</text><ellipse cx="2794.5" cy="634.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2803.5" y="637.0776">error() const : const E &amp;</text><ellipse cx="2794.5" cy="647.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2803.5" y="649.8823">error() : E &amp;</text><ellipse cx="2794.5" cy="660.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2803.5" y="662.687">operator bool() const : bool</text><ellipse cx="2794.5" cy="673.1836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="2803.5" y="675.4917">operator*() : T &amp;</text><ellipse cx="2794.5" cy="685.9883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="2803.5" y="688.2964">operator*() const : const T &amp;</text><ellipse cx="2794.5" cy="698.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="2803.5" y="701.1011">operator-&gt;() : T *</text><ellipse cx="2794.5" cy="711.5977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2803.5" y="713.9058">operator-&gt;() const : const T *</text><ellipse cx="2794.5" cy="724.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2803.5" y="726.7104">Expected&lt;T, E&gt;() : void</text><ellipse cx="2794.5" cy="737.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="2803.5" y="739.5151">Expected&lt;T, E&gt;() : void</text><!--class C_0001769343459678893400--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="112.0234" id="C_0001769343459678893400" style="stroke: #A80036; stroke-width: 1.5;" width="279" x="742.5" y="589.4531"/><ellipse cx="848.75" cy="605.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M851.7188,611.0938 Q851.1406,611.3906 850.5,611.5313 Q849.8594,611.6875 849.1563,611.6875 Q846.6563,611.6875 845.3281,610.0469 Q844.0156,608.3906 844.0156,605.2656 Q844.0156,602.1406 845.3281,600.4844 Q846.6563,598.8281 849.1563,598.8281 Q849.8594,598.8281 850.5,598.9844 Q851.1563,599.1406 851.7188,599.4375 L851.7188,602.1563 Q851.0938,601.5781 850.5,601.3125 Q849.9063,601.0313 849.2813,601.0313 Q847.9375,601.0313 847.25,602.1094 Q846.5625,603.1719 846.5625,605.2656 Q846.5625,607.3594 847.25,608.4375 Q847.9375,609.5 849.2813,609.5 Q849.9063,609.5 850.5,609.2344 Q851.0938,608.9531 851.7188,608.375 L851.7188,611.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="869.25" y="609.6074">Expected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="743.5" x2="1020.5" y1="621.4531" y2="621.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="743.5" x2="1020.5" y1="629.4531" y2="629.4531"/><ellipse cx="753.5" cy="641.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="762.5" y="643.6636">Expected&lt;void, type-parameter-0-0&gt;() : void</text><ellipse cx="753.5" cy="654.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="762.5" y="656.4683">error() const : const E &amp;</text><ellipse cx="753.5" cy="666.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="762.5" y="669.2729">error() : E &amp;</text><ellipse cx="753.5" cy="679.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="762.5" y="682.0776">operator bool() const : bool</text><ellipse cx="753.5" cy="692.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="762.5" y="694.8823">Expected&lt;void, type-parameter-0-0&gt;() : void</text><!--class C_0001240110423953243598--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="112.0234" id="C_0001240110423953243598" style="stroke: #A80036; stroke-width: 1.5;" width="279" x="2741.5" y="105.9531"/><ellipse cx="2827.25" cy="121.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2830.2188,127.5938 Q2829.6406,127.8906 2829,128.0313 Q2828.3594,128.1875 2827.6563,128.1875 Q2825.1563,128.1875 2823.8281,126.5469 Q2822.5156,124.8906 2822.5156,121.7656 Q2822.5156,118.6406 2823.8281,116.9844 Q2825.1563,115.3281 2827.6563,115.3281 Q2828.3594,115.3281 2829,115.4844 Q2829.6563,115.6406 2830.2188,115.9375 L2830.2188,118.6563 Q2829.5938,118.0781 2829,117.8125 Q2828.4063,117.5313 2827.7813,117.5313 Q2826.4375,117.5313 2825.75,118.6094 Q2825.0625,119.6719 2825.0625,121.7656 Q2825.0625,123.8594 2825.75,124.9375 Q2826.4375,126 2827.7813,126 Q2828.4063,126 2829,125.7344 Q2829.5938,125.4531 2830.2188,124.875 L2830.2188,127.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="2847.75" y="126.1074">Expected</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="39" x="2984.5" y="102.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="2985.5" y="115.0918">void,E</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2742.5" x2="3019.5" y1="137.9531" y2="137.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2742.5" x2="3019.5" y1="145.9531" y2="145.9531"/><ellipse cx="2752.5" cy="157.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="2761.5" y="160.1636">Expected&lt;void, type-parameter-0-0&gt;() : void</text><ellipse cx="2752.5" cy="170.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="2761.5" y="172.9683">error() const : const E &amp;</text><ellipse cx="2752.5" cy="183.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="2761.5" y="185.7729">error() : E &amp;</text><ellipse cx="2752.5" cy="196.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="2761.5" y="198.5776">operator bool() const : bool</text><ellipse cx="2752.5" cy="209.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="2761.5" y="211.3823">Expected&lt;void, type-parameter-0-0&gt;() : void</text><!--class C_0000558025235825628270--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="73.6094" id="C_0000558025235825628270" style="stroke: #A80036; stroke-width: 1.5;" width="262" x="6" y="1117.4531"/><ellipse cx="37.65" cy="1133.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M40.6188,1139.0938 Q40.0406,1139.3906 39.4,1139.5313 Q38.7594,1139.6875 38.0563,1139.6875 Q35.5563,1139.6875 34.2281,1138.0469 Q32.9156,1136.3906 32.9156,1133.2656 Q32.9156,1130.1406 34.2281,1128.4844 Q35.5563,1126.8281 38.0563,1126.8281 Q38.7594,1126.8281 39.4,1126.9844 Q40.0563,1127.1406 40.6188,1127.4375 L40.6188,1130.1563 Q39.9938,1129.5781 39.4,1129.3125 Q38.8063,1129.0313 38.1813,1129.0313 Q36.8375,1129.0313 36.15,1130.1094 Q35.4625,1131.1719 35.4625,1133.2656 Q35.4625,1135.3594 36.15,1136.4375 Q36.8375,1137.5 38.1813,1137.5 Q38.8063,1137.5 39.4,1137.2344 Q39.9938,1136.9531 40.6188,1136.375 L40.6188,1139.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="98" x="55.35" y="1137.6074">hardened_hash</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="93" x="178" y="1114.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="91" x="179" y="1126.5918">HashAlgorithm</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="267" y1="1149.4531" y2="1149.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="267" y1="1157.4531" y2="1157.4531"/><ellipse cx="17" cy="1169.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="26" y="1171.6636">hardened_hash&lt;HashAlgorithm&gt;() : void</text><ellipse cx="17" cy="1182.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="26" y="1184.4683">operator()() : hardened_hash::result_type</text><!--class C_0001428376619557242556--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="547.3828" id="C_0001428376619557242556" style="stroke: #A80036; stroke-width: 1.5;" width="1047" x="3013.5" y="371.9531"/><ellipse cx="3442.25" cy="387.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3445.2188,393.5938 Q3444.6406,393.8906 3444,394.0313 Q3443.3594,394.1875 3442.6563,394.1875 Q3440.1563,394.1875 3438.8281,392.5469 Q3437.5156,390.8906 3437.5156,387.7656 Q3437.5156,384.6406 3438.8281,382.9844 Q3440.1563,381.3281 3442.6563,381.3281 Q3443.3594,381.3281 3444,381.4844 Q3444.6563,381.6406 3445.2188,381.9375 L3445.2188,384.6563 Q3444.5938,384.0781 3444,383.8125 Q3443.4063,383.5313 3442.7813,383.5313 Q3441.4375,383.5313 3440.75,384.6094 Q3440.0625,385.6719 3440.0625,387.7656 Q3440.0625,389.8594 3440.75,390.9375 Q3441.4375,392 3442.7813,392 Q3443.4063,392 3444,391.7344 Q3444.5938,391.4531 3445.2188,390.875 L3445.2188,393.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="3462.75" y="392.1074">base_uint</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="118" x="3945.5" y="368.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="116" x="3946.5" y="381.0918">std::size_t Bits,Tag</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3014.5" x2="4059.5" y1="403.9531" y2="403.9531"/><ellipse cx="3024.5" cy="415.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="136" x="3033.5" y="418.1636">bytes : const std::size_t</text><line style="stroke: #000000; stroke-width: 1.0;" x1="3033.5" x2="3169.5" y1="420.1636" y2="420.1636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3014.5" x2="4059.5" y1="424.7578" y2="424.7578"/><ellipse cx="3024.5" cy="436.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="3033.5" y="438.9683">data() : base_uint::pointer</text><ellipse cx="3024.5" cy="449.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="3033.5" y="451.7729">data() const : base_uint::const_pointer</text><ellipse cx="3024.5" cy="462.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="3033.5" y="464.5776">begin() : base_uint::iterator</text><ellipse cx="3024.5" cy="475.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="3033.5" y="477.3823">end() : base_uint::iterator</text><ellipse cx="3024.5" cy="487.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="3033.5" y="490.187">begin() const : base_uint::const_iterator</text><ellipse cx="3024.5" cy="500.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="3033.5" y="502.9917">end() const : base_uint::const_iterator</text><ellipse cx="3024.5" cy="513.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="3033.5" y="515.7964">cbegin() const : base_uint::const_iterator</text><ellipse cx="3024.5" cy="526.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="3033.5" y="528.6011">cend() const : base_uint::const_iterator</text><ellipse cx="3024.5" cy="539.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3033.5" y="541.4058">base_uint&lt;Bits, Tag&gt;() : void</text><ellipse cx="3024.5" cy="551.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3033.5" y="554.2104">base_uint&lt;Bits, Tag&gt;() : void</text><ellipse cx="3024.5" cy="564.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3033.5" y="567.0151">base_uint&lt;Bits, Tag&gt;() : void</text><ellipse cx="3024.5" cy="577.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3033.5" y="579.8198">base_uint&lt;Bits, Tag&gt;() : void</text><ellipse cx="3024.5" cy="590.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="3033.5" y="592.6245">fromVoid() : base_uint&lt;Bits,Tag&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="3033.5" x2="3224.5" y1="594.6245" y2="594.6245"/><ellipse cx="3024.5" cy="603.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="3033.5" y="605.4292">signum() const : int</text><ellipse cx="3024.5" cy="615.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="3033.5" y="618.2339">operator!() const : bool</text><ellipse cx="3024.5" cy="628.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="3033.5" y="631.0386">operator~() const : base_uint&lt;Bits,Tag&gt;</text><ellipse cx="3024.5" cy="641.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="3033.5" y="643.8433">operator=() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="654.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3033.5" y="656.6479">operator^=() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="667.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="222" x="3033.5" y="669.4526">operator&amp;=() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="679.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="3033.5" y="682.2573">operator|=() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="692.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3033.5" y="695.062">operator++() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="705.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="3033.5" y="707.8667">operator++() : const base_uint&lt;Bits,Tag&gt;</text><ellipse cx="3024.5" cy="718.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="3033.5" y="720.6714">operator--() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="731.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="3033.5" y="733.4761">operator--() : const base_uint&lt;Bits,Tag&gt;</text><ellipse cx="3024.5" cy="743.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="3033.5" y="746.2808">next() const : base_uint&lt;Bits,Tag&gt;</text><ellipse cx="3024.5" cy="756.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="3033.5" y="759.0854">prev() const : base_uint&lt;Bits,Tag&gt;</text><ellipse cx="3024.5" cy="769.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="3033.5" y="771.8901">operator+=() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="782.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3033.5" y="784.6948">parseHex() : bool</text><ellipse cx="3024.5" cy="795.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3033.5" y="797.4995">parseHex() : bool</text><ellipse cx="3024.5" cy="807.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="3033.5" y="810.3042">parseHex() : bool</text><ellipse cx="3024.5" cy="820.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="100" x="3033.5" y="823.1089">size() : std::size_t</text><line style="stroke: #000000; stroke-width: 1.0;" x1="3033.5" x2="3133.5" y1="825.1089" y2="825.1089"/><ellipse cx="3024.5" cy="833.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="3033.5" y="835.9136">operator=() : base_uint&lt;Bits,Tag&gt; &amp;</text><ellipse cx="3024.5" cy="846.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="3033.5" y="848.7183">isZero() const : bool</text><ellipse cx="3024.5" cy="859.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="3033.5" y="861.5229">isNonZero() const : bool</text><ellipse cx="3024.5" cy="872.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="3033.5" y="874.3276">zero() : void</text><ellipse cx="3024.5" cy="884.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="3033.5" y="887.1323">base_uint&lt;Bits, Tag&gt;() : void</text><ellipse cx="3024.5" cy="897.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="1021" x="3033.5" y="899.937">operator=() : std::enable_if_t&lt;detail::is_contiguous_container&lt;Container&gt;::value &amp;&amp; std::is_trivially_copyable&lt;typename Container::value_type&gt;::value, base_uint&lt;Bits, Tag&gt; &amp;&gt;</text><ellipse cx="3024.5" cy="910.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="336" x="3033.5" y="912.7417">fromVoidChecked() : std::optional&lt;base_uint&lt;Bits, Tag&gt; &gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="3033.5" x2="3369.5" y1="914.7417" y2="914.7417"/><!--class C_0000108394786559681415--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="60.8047" id="C_0000108394786559681415" style="stroke: #A80036; stroke-width: 1.5;" width="186" x="3336" y="131.4531"/><ellipse cx="3358.65" cy="147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3361.6188,153.0938 Q3361.0406,153.3906 3360.4,153.5313 Q3359.7594,153.6875 3359.0563,153.6875 Q3356.5563,153.6875 3355.2281,152.0469 Q3353.9156,150.3906 3353.9156,147.2656 Q3353.9156,144.1406 3355.2281,142.4844 Q3356.5563,140.8281 3359.0563,140.8281 Q3359.7594,140.8281 3360.4,140.9844 Q3361.0563,141.1406 3361.6188,141.4375 L3361.6188,144.1563 Q3360.9938,143.5781 3360.4,143.3125 Q3359.8063,143.0313 3359.1813,143.0313 Q3357.8375,143.0313 3357.15,144.1094 Q3356.4625,145.1719 3356.4625,147.2656 Q3356.4625,149.3594 3357.15,150.4375 Q3357.8375,151.5 3359.1813,151.5 Q3359.8063,151.5 3360.4,151.2344 Q3360.9938,150.9531 3361.6188,150.375 L3361.6188,153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="137" x="3374.35" y="151.6074">base_uint::VoidHelper</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3337" x2="3521" y1="163.4531" y2="163.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="3337" x2="3521" y1="171.4531" y2="171.4531"/><ellipse cx="3347" cy="183.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="3356" y="185.6636">VoidHelper() = default : void</text><!--class C_0001679892294318045758--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="86.4141" id="C_0001679892294318045758" style="stroke: #A80036; stroke-width: 1.5;" width="176" x="3557" y="118.9531"/><ellipse cx="3572" cy="134.9531" fill="#EB937F" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M3576.1094,140.9531 L3568.3906,140.9531 L3568.3906,128.5625 L3576.1094,128.5625 L3576.1094,130.7188 L3570.8438,130.7188 L3570.8438,133.3906 L3575.6094,133.3906 L3575.6094,135.5469 L3570.8438,135.5469 L3570.8438,138.7969 L3576.1094,138.7969 L3576.1094,140.9531 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="144" x="3586" y="139.1074">base_uint::ParseResult</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3558" x2="3732" y1="150.9531" y2="150.9531"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="26" x="3563" y="165.1636">okay</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="59" x="3563" y="177.9683">badLength</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="3563" y="190.7729">badChar</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="3558" x2="3732" y1="197.3672" y2="197.3672"/><!--class C_0000483100618119517780--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="99.2188" id="C_0000483100618119517780" style="stroke: #A80036; stroke-width: 1.5;" width="358" x="303" y="1104.9531"/><ellipse cx="391.75" cy="1120.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M394.7188,1126.5938 Q394.1406,1126.8906 393.5,1127.0313 Q392.8594,1127.1875 392.1563,1127.1875 Q389.6563,1127.1875 388.3281,1125.5469 Q387.0156,1123.8906 387.0156,1120.7656 Q387.0156,1117.6406 388.3281,1115.9844 Q389.6563,1114.3281 392.1563,1114.3281 Q392.8594,1114.3281 393.5,1114.4844 Q394.1563,1114.6406 394.7188,1114.9375 L394.7188,1117.6563 Q394.0938,1117.0781 393.5,1116.8125 Q392.9063,1116.5313 392.2813,1116.5313 Q390.9375,1116.5313 390.25,1117.6094 Q389.5625,1118.6719 389.5625,1120.7656 Q389.5625,1122.8594 390.25,1123.9375 Q390.9375,1125 392.2813,1125 Q392.9063,1125 393.5,1124.7344 Q394.0938,1124.4531 394.7188,1123.875 L394.7188,1126.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="172" x="412.25" y="1125.1074">openssl_ripemd160_hasher</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="660" y1="1136.9531" y2="1136.9531"/><ellipse cx="314" cy="1148.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="323" y="1151.1636">endian : const boost::endian::order</text><line style="stroke: #000000; stroke-width: 1.0;" x1="323" x2="525" y1="1153.1636" y2="1153.1636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="304" x2="660" y1="1157.7578" y2="1157.7578"/><ellipse cx="314" cy="1169.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="323" y="1171.9683">openssl_ripemd160_hasher() : void</text><ellipse cx="314" cy="1182.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="323" y="1184.7729">operator()() : void</text><ellipse cx="314" cy="1195.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="332" x="323" y="1197.5776">operator array() : openssl_ripemd160_hasher::result_type</text><!--class C_0000172642286500493838--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="99.2188" id="C_0000172642286500493838" style="stroke: #A80036; stroke-width: 1.5;" width="339" x="2329.5" y="595.9531"/><ellipse cx="2418.75" cy="611.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2421.7188,617.5938 Q2421.1406,617.8906 2420.5,618.0313 Q2419.8594,618.1875 2419.1563,618.1875 Q2416.6563,618.1875 2415.3281,616.5469 Q2414.0156,614.8906 2414.0156,611.7656 Q2414.0156,608.6406 2415.3281,606.9844 Q2416.6563,605.3281 2419.1563,605.3281 Q2419.8594,605.3281 2420.5,605.4844 Q2421.1563,605.6406 2421.7188,605.9375 L2421.7188,608.6563 Q2421.0938,608.0781 2420.5,607.8125 Q2419.9063,607.5313 2419.2813,607.5313 Q2417.9375,607.5313 2417.25,608.6094 Q2416.5625,609.6719 2416.5625,611.7656 Q2416.5625,613.8594 2417.25,614.9375 Q2417.9375,616 2419.2813,616 Q2419.9063,616 2420.5,615.7344 Q2421.0938,615.4531 2421.7188,614.875 L2421.7188,617.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="2439.25" y="616.1074">openssl_sha512_hasher</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2330.5" x2="2667.5" y1="627.9531" y2="627.9531"/><ellipse cx="2340.5" cy="639.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="2349.5" y="642.1636">endian : const boost::endian::order</text><line style="stroke: #000000; stroke-width: 1.0;" x1="2349.5" x2="2551.5" y1="644.1636" y2="644.1636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2330.5" x2="2667.5" y1="648.7578" y2="648.7578"/><ellipse cx="2340.5" cy="660.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="2349.5" y="662.9683">openssl_sha512_hasher() : void</text><ellipse cx="2340.5" cy="673.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="2349.5" y="675.7729">operator()() : void</text><ellipse cx="2340.5" cy="686.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="2349.5" y="688.5776">operator array() : openssl_sha512_hasher::result_type</text><!--class C_0000756487702076707832--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="99.2188" id="C_0000756487702076707832" style="stroke: #A80036; stroke-width: 1.5;" width="339" x="4095.5" y="595.9531"/><ellipse cx="4184.75" cy="611.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4187.7188,617.5938 Q4187.1406,617.8906 4186.5,618.0313 Q4185.8594,618.1875 4185.1563,618.1875 Q4182.6563,618.1875 4181.3281,616.5469 Q4180.0156,614.8906 4180.0156,611.7656 Q4180.0156,608.6406 4181.3281,606.9844 Q4182.6563,605.3281 4185.1563,605.3281 Q4185.8594,605.3281 4186.5,605.4844 Q4187.1563,605.6406 4187.7188,605.9375 L4187.7188,608.6563 Q4187.0938,608.0781 4186.5,607.8125 Q4185.9063,607.5313 4185.2813,607.5313 Q4183.9375,607.5313 4183.25,608.6094 Q4182.5625,609.6719 4182.5625,611.7656 Q4182.5625,613.8594 4183.25,614.9375 Q4183.9375,616 4185.2813,616 Q4185.9063,616 4186.5,615.7344 Q4187.0938,615.4531 4187.7188,614.875 L4187.7188,617.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="4205.25" y="616.1074">openssl_sha256_hasher</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4096.5" x2="4433.5" y1="627.9531" y2="627.9531"/><ellipse cx="4106.5" cy="639.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="4115.5" y="642.1636">endian : const boost::endian::order</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4115.5" x2="4317.5" y1="644.1636" y2="644.1636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4096.5" x2="4433.5" y1="648.7578" y2="648.7578"/><ellipse cx="4106.5" cy="660.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="4115.5" y="662.9683">openssl_sha256_hasher() : void</text><ellipse cx="4106.5" cy="673.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4115.5" y="675.7729">operator()() : void</text><ellipse cx="4106.5" cy="686.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="313" x="4115.5" y="688.5776">operator array() : openssl_sha256_hasher::result_type</text><!--class C_0000009444761906305918--><rect fill="#FEFECE" filter="url(#f1ctuuqcu6bfxq)" height="86.4141" id="C_0000009444761906305918" style="stroke: #A80036; stroke-width: 1.5;" width="289" x="4120.5" y="118.9531"/><ellipse cx="4212.25" cy="134.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M4215.2188,140.5938 Q4214.6406,140.8906 4214,141.0313 Q4213.3594,141.1875 4212.6563,141.1875 Q4210.1563,141.1875 4208.8281,139.5469 Q4207.5156,137.8906 4207.5156,134.7656 Q4207.5156,131.6406 4208.8281,129.9844 Q4210.1563,128.3281 4212.6563,128.3281 Q4213.3594,128.3281 4214,128.4844 Q4214.6563,128.6406 4215.2188,128.9375 L4215.2188,131.6563 Q4214.5938,131.0781 4214,130.8125 Q4213.4063,130.5313 4212.7813,130.5313 Q4211.4375,130.5313 4210.75,131.6094 Q4210.0625,132.6719 4210.0625,134.7656 Q4210.0625,136.8594 4210.75,137.9375 Q4211.4375,139 4212.7813,139 Q4213.4063,139 4214,138.7344 Q4214.5938,138.4531 4215.2188,137.875 L4215.2188,140.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="97" x="4232.75" y="139.1074">ripesha_hasher</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="4121.5" x2="4408.5" y1="150.9531" y2="150.9531"/><ellipse cx="4131.5" cy="162.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="202" x="4140.5" y="165.1636">endian : const boost::endian::order</text><line style="stroke: #000000; stroke-width: 1.0;" x1="4140.5" x2="4342.5" y1="167.1636" y2="167.1636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="4121.5" x2="4408.5" y1="171.7578" y2="171.7578"/><ellipse cx="4131.5" cy="183.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="4140.5" y="185.9683">operator()() : void</text><ellipse cx="4131.5" cy="196.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="263" x="4140.5" y="198.7729">operator array() : ripesha_hasher::result_type</text><!--link C_0002153069467650067693 to C_0001602748540838302362--><path d="M1394.2,1313.1131 C1405.34,1331.7631 1416.66,1350.7031 1427.67,1369.1331 " fill="none" id="C_0002153069467650067693-C_0001602748540838302362" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1430.46,1373.8031,1429.2835,1364.0248,1427.8981,1369.5094,1422.4135,1368.1239,1430.46,1373.8031" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000623272287488884477 to C_0001602748540838302362--><path d="M1529.32,727.1031 C1526.28,873.5531 1519.8,1184.9931 1515.98,1368.4631 " fill="none" id="C_0000623272287488884477-C_0001602748540838302362" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1515.88,1373.5831,1520.0592,1364.6649,1515.98,1368.5841,1512.0608,1364.5049,1515.88,1373.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000623272287488884477 to C_0001857952901522980788--><path d="M1554.38,727.0431 C1575.85,794.0231 1611.53,890.2731 1659,965.9531 C1688.7,1013.3031 1730.97,1059.7731 1766.04,1094.6131 " fill="none" id="C_0000623272287488884477-C_0001857952901522980788" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1769.85,1098.3731,1766.2588,1089.2023,1766.2931,1094.8591,1760.6364,1094.8934,1769.85,1098.3731" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000623272287488884477 to C_0001857952901522980788--><path d="M1585.16,738.2831 C1647.06,843.2431 1746.38,1011.6731 1797.41,1098.2031 " fill="none" id="C_0000623272287488884477-C_0001857952901522980788" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1578.54,727.0731,1578.14,734.2731,1584.6323,737.4116,1585.0323,730.2116,1578.54,727.0731" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1723" cy="958.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="28" x="1730" y="962.02">type</text><!--link C_0000623272287488884477 to C_0001857952901522980788--><path d="M1523.28,740.4131 C1522.12,807.6631 1529.82,897.9631 1570,965.9531 C1609.78,1033.2731 1684.21,1083.1731 1743.27,1114.5031 " fill="none" id="C_0000623272287488884477-C_0001857952901522980788" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1523.62,727.2831,1519.4632,733.1756,1523.3036,739.279,1527.4604,733.3865,1523.62,727.2831" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1576" cy="958.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="1583" y="962.02">subtypes</text><!--link C_0000623272287488884477 to C_0002153069467650067693--><path d="M1494.27,727.0731 C1462.04,797.8131 1414.17,902.8831 1374.01,991.0031 " fill="none" id="C_0000623272287488884477-C_0002153069467650067693" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1371.87,995.7231,1379.2434,989.1938,1373.9444,991.1737,1371.9644,985.8747,1371.87,995.7231" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000623272287488884477 to C_0002153069467650067693--><path d="M1488.89,738.8831 C1459.2,796.2231 1414.98,868.3531 1360,918.9531 C1338.64,938.6031 1317.21,924.2331 1302,948.9531 C1293.21,963.2431 1287.59,979.2231 1284.28,995.7831 " fill="none" id="C_0000623272287488884477-C_0002153069467650067693" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1494.81,727.2531,1488.5176,730.7753,1489.3487,737.9383,1495.6411,734.4162,1494.81,727.2531" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="1308" cy="958.0195" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="65" x="1315" y="962.02">fingerprint</text><!--link C_0000141408528822188088 to C_0001602748540838302362--><path d="M1651.09,237.0331 C1699.42,379.1731 1790.71,699.7131 1738,965.9531 C1737.47,968.6231 1638.63,1208.0331 1572.14,1368.9031 " fill="none" id="C_0000141408528822188088-C_0001602748540838302362" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1570.18,1373.6431,1577.3234,1366.8629,1572.096,1369.0248,1569.9341,1363.7973,1570.18,1373.6431" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0001004919123456394230 to C_0001602748540838302362--><path d="M1252.37,727.2431 C1288.05,781.7831 1336.66,855.1831 1381,918.9531 C1405.16,953.6931 1421.01,956.7731 1437,995.9531 C1485.88,1115.7231 1503.88,1262.5031 1510.23,1368.8531 " fill="none" id="C_0001004919123456394230-C_0001602748540838302362" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1510.53,1373.8831,1514.0085,1364.669,1510.2439,1368.8913,1506.0216,1365.1267,1510.53,1373.8831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0001004919123456394230 to C_0002153069467650067693--><path d="M1167.5,727.1831 C1145.86,792.9931 1125.92,887.5231 1153,965.9531 C1159.02,983.3731 1167.39,1000.4131 1177.12,1016.6731 " fill="none" id="C_0001004919123456394230-C_0002153069467650067693" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1179.9,1021.2431,1178.6373,1011.4756,1177.3003,1016.9721,1171.8037,1015.6351,1179.9,1021.2431" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0001004919123456394230 to C_0002153069467650067693--><path d="M1180.69,740.1731 C1171.03,804.8031 1165.3,892.0531 1186,965.9531 C1188.8,975.9531 1192.3,985.9431 1196.31,995.8231 " fill="none" id="C_0001004919123456394230-C_0002153069467650067693" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1182.74,727.1531,1177.8529,732.4556,1180.8678,739.0062,1185.7549,733.7037,1182.74,727.1531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1189" y="955.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="1199" y="962.02">payload_</text><!--link C_0000141408528822188088 to C_0001004919123456394230--><path d="M1510.31,249.7331 C1467.39,285.2331 1419.63,328.2131 1381,371.9531 C1328.46,431.4431 1279.35,507.1931 1245.57,563.7131 " fill="none" id="C_0000141408528822188088-C_0001004919123456394230" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1505.97,244.2431,1525.88,237.0131,1514.83,255.0831,1505.97,244.2431" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000898949948555513083 to C_0000051815775375752491--><path d="M2096,186.1731 C2096,261.8031 2096,501.8531 2096,600.9831 " fill="none" id="C_0000898949948555513083-C_0000051815775375752491" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2103,601.1831,2096,621.1831,2089,601.1831,2103,601.1831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000304197526022160872 to C_0000172642286500493838--><path d="M2499,224.8531 C2499,321.8831 2499,507.7831 2499,595.8631 " fill="none" id="C_0000304197526022160872-C_0000172642286500493838" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="2499,211.7731,2495,217.7731,2499,223.7731,2503,217.7731,2499,211.7731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2502" y="331.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="15" x="2512" y="338.02">h_</text><!--link C_0001240110423953243598 to C_0002158785723697762442--><path d="M2881,218.1831 C2881,292.4131 2881,426.3131 2881,524.2931 " fill="none" id="C_0001240110423953243598-C_0002158785723697762442" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="2888,524.3131,2881,544.3131,2874,524.3131,2888,524.3131" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000108394786559681415 to C_0001428376619557242556--><path d="M3435.67,192.7131 C3443.54,227.7631 3457.44,289.7731 3472.49,356.8231 " fill="none" id="C_0000108394786559681415-C_0001428376619557242556" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3474.0568" cy="363.8576" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3472.3036" x2="3475.81" y1="356.0521" y2="371.6631"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3481.8623" x2="3466.2513" y1="362.1044" y2="365.6108"/><!--link C_0001679892294318045758 to C_0001428376619557242556--><path d="M3635.51,205.2631 C3627.38,241.5131 3614.89,297.2031 3601.5,356.8931 " fill="none" id="C_0001679892294318045758-C_0001428376619557242556" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="3599.9216" cy="363.9172" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3601.6731" x2="3598.17" y1="356.1113" y2="371.7231"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3607.7275" x2="3592.1157" y1="365.6688" y2="362.1657"/><!--link C_0000009444761906305918 to C_0000756487702076707832--><path d="M4265,218.5531 C4265,313.5531 4265,505.5731 4265,595.6831 " fill="none" id="C_0000009444761906305918-C_0000756487702076707832" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="4265,205.2631,4261,211.2631,4265,217.2631,4269,211.2631,4265,205.2631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="4268" y="331.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="15" x="4278" y="338.02">h_</text><!--link C_0000110916603091449172 to C_0001162300429665963796--><!--link C_0001162300429665963796 to C_0001180273605615681717--><!--link C_0001180273605615681717 to C_0001596544969333807924--><!--link C_0000110916603091449172 to C_0002219031497374695928--><!--link C_0002219031497374695928 to C_0000770976208116654116--><!--link C_0000770976208116654116 to C_0000704939383398036480--><!--link C_0000704939383398036480 to C_0001769343459678893400--><!--link C_0002219031497374695928 to C_0000558025235825628270--><!--link C_0000558025235825628270 to C_0000483100618119517780--><!--
@startuml
title Class Diagram for conditions
class "Slice" as C_0001602748540838302362
class C_0001602748540838302362 {
+Slice() = default : void
+Slice() = default : void
+operator=() = default : Slice &
+Slice() : void
+empty() const : bool
+size() const : std::size_t
+length() const : std::size_t
+data() const : const std::uint8_t *
+operator[]() const : std::uint8_t
+operator+=() : Slice &
+operator+() const : Slice
+remove_prefix() : void
+remove_suffix() : void
+begin() const : Slice::const_iterator
+cbegin() const : Slice::const_iterator
+end() const : Slice::const_iterator
+cend() const : Slice::const_iterator
+substr() const : Slice
}
class "Buffer" as C_0002153069467650067693
class C_0002153069467650067693 {
+Buffer() = default : void
+Buffer() : void
+Buffer() : void
+Buffer() : void
+operator=() : Buffer &
+Buffer() : void
+operator=() : Buffer &
+Buffer() : void
+operator=() : Buffer &
+size() const : std::size_t
+empty() const : bool
+operator Slice() const : Slice
+data() const : const std::uint8_t *
+data() : std::uint8_t *
+clear() : void
+alloc() : std::uint8_t *
+operator()() : void *
+begin() const : Buffer::const_iterator
+cbegin() const : Buffer::const_iterator
+end() const : Buffer::const_iterator
+cend() const : Buffer::const_iterator
}
enum "cryptoconditions::error" as C_0000110916603091449172
enum C_0000110916603091449172 {
generic
unsupported_type
unsupported_subtype
unknown_type
unknown_subtype
fingerprint_size
incorrect_encoding
trailing_garbage
buffer_empty
buffer_overfull
buffer_underfull
malformed_encoding
short_preamble
unexpected_tag
long_tag
large_size
preimage_too_long
}
class "cryptoconditions::der::Preamble" as C_0001162300429665963796
class C_0001162300429665963796 {
+Preamble() = default : void
+type : std::uint8_t
+tag : std::size_t
+length : std::size_t
}
enum "cryptoconditions::Type" as C_0001857952901522980788
enum C_0001857952901522980788 {
preimageSha256
prefixSha256
thresholdSha256
rsaSha256
ed25519Sha256
}
class "cryptoconditions::Condition" as C_0000623272287488884477
class C_0000623272287488884477 {
{static} +deserialize() : std::unique_ptr<Condition>
+Condition() : void
+Condition() : void
+~Condition() = default : void
+Condition() = default : void
+Condition() = default : void
+Condition() : void
+cost : std::uint32_t
{static} +maxSerializedCondition : const std::size_t
}
abstract "cryptoconditions::Fulfillment" as C_0000141408528822188088
abstract C_0000141408528822188088 {
{static} +deserialize() : std::unique_ptr<Fulfillment>
+~Fulfillment() = default : void
{abstract} +fingerprint() const = 0 : Buffer
{abstract} +type() const = 0 : cryptoconditions::Type
{abstract} +validate() const = 0 : bool
{abstract} +cost() const = 0 : std::uint32_t
{abstract} +condition() const = 0 : cryptoconditions::Condition
{static} +maxSerializedFulfillment : const std::size_t
}
class "cryptoconditions::PreimageSha256" as C_0001004919123456394230
class C_0001004919123456394230 {
{static} +deserialize() : std::unique_ptr<Fulfillment>
+PreimageSha256() : void
+PreimageSha256() : void
+type() const : cryptoconditions::Type
+fingerprint() const : Buffer
+cost() const : std::uint32_t
+condition() const : cryptoconditions::Condition
+validate() const : bool
{static} +maxPreimageLength : const std::size_t
}
class "cryptoconditions::detail::cryptoconditions_error_category" as C_0001180273605615681717
class C_0001180273605615681717 {
+cryptoconditions_error_category() = default : void
+name() const : const char *
+message() const : std::string
+default_error_condition() const : std::error_condition
+equivalent() const : bool
+equivalent() const : bool
}
class "bad_expected_access" as C_0001596544969333807924
class C_0001596544969333807924 {
+bad_expected_access() : void
}
class "detail::throw_policy" as C_0002219031497374695928
class C_0002219031497374695928 {
{static} +wide_value_check() : void
{static} +wide_error_check() : void
{static} +wide_exception_check() : void
}
class "detail::is_contiguous_container<Container,>" as C_0000051815775375752491
class C_0000051815775375752491 {
}
class "detail::is_contiguous_container" as C_0000770976208116654116
class C_0000770976208116654116 {
}
class "detail::is_contiguous_container<Container,void>" as C_0000898949948555513083
class C_0000898949948555513083 {
}
class "detail::basic_sha512_half_hasher<_Bool Secure>" as C_0000304197526022160872
class C_0000304197526022160872 {
+~basic_sha512_half_hasher<Secure>() : void
+operator()() : void
+operator base_uint() : detail::basic_sha512_half_hasher::result_type
{static} +endian : const boost::endian::order
}
class "Unexpected<E>" as C_0000704939383398036480
class C_0000704939383398036480 {
+Unexpected<E>() : void
+Unexpected<E>() : void
+Unexpected<E>() : void
+value() const : const E &
+value() : E &
+value() : E &&
+value() const : const E &&
}
class "Expected<T,E>" as C_0002158785723697762442
class C_0002158785723697762442 {
+has_value() const : bool
+value() const : const T &
+value() : T &
+error() const : const E &
+error() : E &
+operator bool() const : bool
+operator*() : T &
+operator*() const : const T &
+operator->() : T *
+operator->() const : const T *
+Expected<T, E>() : void
+Expected<T, E>() : void
}
class "Expected" as C_0001769343459678893400
class C_0001769343459678893400 {
+Expected<void, type-parameter-0-0>() : void
+error() const : const E &
+error() : E &
+operator bool() const : bool
+Expected<void, type-parameter-0-0>() : void
}
class "Expected<void,E>" as C_0001240110423953243598
class C_0001240110423953243598 {
+Expected<void, type-parameter-0-0>() : void
+error() const : const E &
+error() : E &
+operator bool() const : bool
+Expected<void, type-parameter-0-0>() : void
}
class "hardened_hash<HashAlgorithm>" as C_0000558025235825628270
class C_0000558025235825628270 {
+hardened_hash<HashAlgorithm>() : void
+operator()() : hardened_hash::result_type
}
class "base_uint<std::size_t Bits,Tag>" as C_0001428376619557242556
class C_0001428376619557242556 {
+data() : base_uint::pointer
+data() const : base_uint::const_pointer
+begin() : base_uint::iterator
+end() : base_uint::iterator
+begin() const : base_uint::const_iterator
+end() const : base_uint::const_iterator
+cbegin() const : base_uint::const_iterator
+cend() const : base_uint::const_iterator
+base_uint<Bits, Tag>() : void
+base_uint<Bits, Tag>() : void
+base_uint<Bits, Tag>() : void
+base_uint<Bits, Tag>() : void
{static} +fromVoid() : base_uint<Bits,Tag>
+signum() const : int
+operator!() const : bool
+operator~() const : base_uint<Bits,Tag>
+operator=() : base_uint<Bits,Tag> &
+operator^=() : base_uint<Bits,Tag> &
+operator&=() : base_uint<Bits,Tag> &
+operator|=() : base_uint<Bits,Tag> &
+operator++() : base_uint<Bits,Tag> &
+operator++() : const base_uint<Bits,Tag>
+operator- -() : base_uint<Bits,Tag> &
+operator- -() : const base_uint<Bits,Tag>
+next() const : base_uint<Bits,Tag>
+prev() const : base_uint<Bits,Tag>
+operator+=() : base_uint<Bits,Tag> &
+parseHex() : bool
+parseHex() : bool
+parseHex() : bool
{static} +size() : std::size_t
+operator=() : base_uint<Bits,Tag> &
+isZero() const : bool
+isNonZero() const : bool
+zero() : void
+base_uint<Bits, Tag>() : void
+operator=() : std::enable_if_t<detail::is_contiguous_container<Container>::value && std::is_trivially_copyable<typename Container::value_type>::value, base_uint<Bits, Tag> &>
{static} +fromVoidChecked() : std::optional<base_uint<Bits, Tag> >
{static} +bytes : const std::size_t
}
class "base_uint::VoidHelper" as C_0000108394786559681415
class C_0000108394786559681415 {
+VoidHelper() = default : void
}
enum "base_uint::ParseResult" as C_0001679892294318045758
enum C_0001679892294318045758 {
okay
badLength
badChar
}
class "openssl_ripemd160_hasher" as C_0000483100618119517780
class C_0000483100618119517780 {
+openssl_ripemd160_hasher() : void
+operator()() : void
+operator array() : openssl_ripemd160_hasher::result_type
{static} +endian : const boost::endian::order
}
class "openssl_sha512_hasher" as C_0000172642286500493838
class C_0000172642286500493838 {
+openssl_sha512_hasher() : void
+operator()() : void
+operator array() : openssl_sha512_hasher::result_type
{static} +endian : const boost::endian::order
}
class "openssl_sha256_hasher" as C_0000756487702076707832
class C_0000756487702076707832 {
+openssl_sha256_hasher() : void
+operator()() : void
+operator array() : openssl_sha256_hasher::result_type
{static} +endian : const boost::endian::order
}
class "ripesha_hasher" as C_0000009444761906305918
class C_0000009444761906305918 {
+operator()() : void
+operator array() : ripesha_hasher::result_type
{static} +endian : const boost::endian::order
}
C_0002153069467650067693 ..> C_0001602748540838302362
C_0000623272287488884477 ..> C_0001602748540838302362
C_0000623272287488884477 ..> C_0001857952901522980788
C_0000623272287488884477 ..> C_0002153069467650067693
C_0000623272287488884477 o- - C_0001857952901522980788 : +type
C_0000623272287488884477 o- - C_0002153069467650067693 : +fingerprint
C_0000623272287488884477 o- - C_0001857952901522980788 : +subtypes
C_0000141408528822188088 ..> C_0001602748540838302362
C_0001004919123456394230 ..> C_0001602748540838302362
C_0001004919123456394230 ..> C_0002153069467650067693
C_0001004919123456394230 o- - C_0002153069467650067693 : -payload_
C_0000141408528822188088 <|- - C_0001004919123456394230
C_0000898949948555513083 ..|> C_0000051815775375752491
C_0000304197526022160872 o- - C_0000172642286500493838 : -h_
C_0001240110423953243598 ..|> C_0002158785723697762442
C_0000108394786559681415 - -+ C_0001428376619557242556
C_0001679892294318045758 - -+ C_0001428376619557242556
C_0000009444761906305918 o- - C_0000756487702076707832 : -h_
@enduml

PlantUML version 1.2018.13(Mon Nov 26 17:11:51 UTC 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.17+8-post-Ubuntu-1ubuntu220.04
Operating System: Linux
OS Version: 5.4.0-91-generic
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>