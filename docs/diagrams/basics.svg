<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1076px" preserveAspectRatio="none" style="width:1599px;height:1076px;" version="1.1" viewBox="0 0 1599 1076" width="1599px" zoomAndPan="magnify"><defs><filter height="300%" id="f16osna2ua2fbc" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="213" x="697" y="16.708">Class Diagram for basics</text><!--class C_0001927026177791066667--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="124.8281" id="C_0001927026177791066667" style="stroke: #A80036; stroke-width: 1.5;" width="157" x="569" y="105.4531"/><ellipse cx="616.75" cy="121.4531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M616.8594,116.7969 L615.7031,121.875 L618.0313,121.875 L616.8594,116.7969 Z M615.375,114.5625 L618.3594,114.5625 L621.7188,126.9531 L619.2656,126.9531 L618.5,123.8906 L615.2188,123.8906 L614.4688,126.9531 L612.0313,126.9531 L615.375,114.5625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="53" x="637.25" y="125.6074">Resolver</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="570" x2="725" y1="137.4531" y2="137.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="570" x2="725" y1="145.4531" y2="145.4531"/><ellipse cx="580" cy="157.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="589" y="159.6636">~Resolver() = 0 : void</text><ellipse cx="580" cy="170.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="131" x="589" y="172.4683">stop_async() = 0 : void</text><ellipse cx="580" cy="182.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="92" x="589" y="185.2729">stop() = 0 : void</text><ellipse cx="580" cy="195.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="589" y="198.0776">start() = 0 : void</text><ellipse cx="580" cy="208.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="109" x="589" y="210.8823">resolve() = 0 : void</text><ellipse cx="580" cy="221.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="589" y="223.687">resolve() : void</text><!--class C_0000402213617266332336--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="73.6094" id="C_0000402213617266332336" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="524" y="492.4531"/><ellipse cx="603.75" cy="508.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M606.7188,514.0938 Q606.1406,514.3906 605.5,514.5313 Q604.8594,514.6875 604.1563,514.6875 Q601.6563,514.6875 600.3281,513.0469 Q599.0156,511.3906 599.0156,508.2656 Q599.0156,505.1406 600.3281,503.4844 Q601.6563,501.8281 604.1563,501.8281 Q604.8594,501.8281 605.5,501.9844 Q606.1563,502.1406 606.7188,502.4375 L606.7188,505.1563 Q606.0938,504.5781 605.5,504.3125 Q604.9063,504.0313 604.2813,504.0313 Q602.9375,504.0313 602.25,505.1094 Q601.5625,506.1719 601.5625,508.2656 Q601.5625,510.3594 602.25,511.4375 Q602.9375,512.5 604.2813,512.5 Q604.9063,512.5 605.5,512.2344 Q606.0938,511.9531 606.7188,511.375 L606.7188,514.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="79" x="624.25" y="512.6074">ResolverAsio</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="525" x2="770" y1="524.4531" y2="524.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="525" x2="770" y1="532.4531" y2="532.4531"/><ellipse cx="535" cy="544.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="544" y="546.6636">ResolverAsio() = default : void</text><ellipse cx="535" cy="557.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="221" x="544" y="559.4683">New() : std::unique_ptr&lt;ResolverAsio&gt;</text><line style="stroke: #000000; stroke-width: 1.0;" x1="544" x2="765" y1="561.4683" y2="561.4683"/><!--class C_0000525595014241869424--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="329.7031" id="C_0000525595014241869424" style="stroke: #A80036; stroke-width: 1.5;" width="287" x="504" y="735.9531"/><ellipse cx="591.25" cy="751.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M594.2188,757.5938 Q593.6406,757.8906 593,758.0313 Q592.3594,758.1875 591.6563,758.1875 Q589.1563,758.1875 587.8281,756.5469 Q586.5156,754.8906 586.5156,751.7656 Q586.5156,748.6406 587.8281,746.9844 Q589.1563,745.3281 591.6563,745.3281 Q592.3594,745.3281 593,745.4844 Q593.6563,745.6406 594.2188,745.9375 L594.2188,748.6563 Q593.5938,748.0781 593,747.8125 Q592.4063,747.5313 591.7813,747.5313 Q590.4375,747.5313 589.75,748.6094 Q589.0625,749.6719 589.0625,751.7656 Q589.0625,753.8594 589.75,754.9375 Q590.4375,756 591.7813,756 Q592.4063,756 593,755.7344 Q593.5938,755.4531 594.2188,754.875 L594.2188,757.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="611.75" y="756.1074">ResolverAsioImpl</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="505" x2="790" y1="767.9531" y2="767.9531"/><ellipse cx="515" cy="779.8555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="524" y="782.1636">m_journal : beast::Journal</text><ellipse cx="515" cy="792.6602" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="524" y="794.9683">m_io_service : boost::asio::io_service &amp;</text><ellipse cx="515" cy="805.4648" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="524" y="807.7729">m_strand : boost::asio::io_service::strand</text><ellipse cx="515" cy="818.2695" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="524" y="820.5776">m_resolver : boost::asio::ip::tcp::resolver</text><ellipse cx="515" cy="831.0742" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="524" y="833.3823">m_cv : std::condition_variable</text><ellipse cx="515" cy="843.8789" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="524" y="846.187">m_mut : std::mutex</text><ellipse cx="515" cy="856.6836" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="524" y="858.9917">m_asyncHandlersCompleted : bool</text><ellipse cx="515" cy="869.4883" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="524" y="871.7964">m_stop_called : std::atomic&lt;bool&gt;</text><ellipse cx="515" cy="882.293" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="524" y="884.6011">m_stopped : std::atomic&lt;bool&gt;</text><ellipse cx="515" cy="895.0977" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="524" y="897.4058">m_work : std::deque&lt;Work&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="505" x2="790" y1="904" y2="904"/><ellipse cx="515" cy="915.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="524" y="918.2104">ResolverAsioImpl() : void</text><ellipse cx="515" cy="928.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="524" y="931.0151">~ResolverAsioImpl() : void</text><ellipse cx="515" cy="941.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="524" y="943.8198">asyncHandlersComplete() : void</text><ellipse cx="515" cy="954.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="524" y="956.6245">start() : void</text><ellipse cx="515" cy="967.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="524" y="969.4292">stop_async() : void</text><ellipse cx="515" cy="979.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="524" y="982.2339">stop() : void</text><ellipse cx="515" cy="992.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="524" y="995.0386">resolve() : void</text><ellipse cx="515" cy="1005.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="88" x="524" y="1007.8433">do_stop() : void</text><ellipse cx="515" cy="1018.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="524" y="1020.6479">do_finish() : void</text><ellipse cx="515" cy="1031.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="524" y="1033.4526">parseName() : ResolverAsioImpl::HostAndPort</text><ellipse cx="515" cy="1043.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="524" y="1046.2573">do_work() : void</text><ellipse cx="515" cy="1056.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="524" y="1059.062">do_resolve() : void</text><!--class C_0001472880491539920613--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="86.4141" id="C_0001472880491539920613" style="stroke: #A80036; stroke-width: 1.5;" width="206" x="806.5" y="486.4531"/><ellipse cx="866.75" cy="502.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M869.7188,508.0938 Q869.1406,508.3906 868.5,508.5313 Q867.8594,508.6875 867.1563,508.6875 Q864.6563,508.6875 863.3281,507.0469 Q862.0156,505.3906 862.0156,502.2656 Q862.0156,499.1406 863.3281,497.4844 Q864.6563,495.8281 867.1563,495.8281 Q867.8594,495.8281 868.5,495.9844 Q869.1563,496.1406 869.7188,496.4375 L869.7188,499.1563 Q869.0938,498.5781 868.5,498.3125 Q867.9063,498.0313 867.2813,498.0313 Q865.9375,498.0313 865.25,499.1094 Q864.5625,500.1719 864.5625,502.2656 Q864.5625,504.3594 865.25,505.4375 Q865.9375,506.5 867.2813,506.5 Q867.9063,506.5 868.5,506.2344 Q869.0938,505.9531 869.7188,505.375 L869.7188,508.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="77" x="887.25" y="506.6074">UptimeClock</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="807.5" x2="1011.5" y1="518.4531" y2="518.4531"/><ellipse cx="817.5" cy="530.3555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="125" x="826.5" y="532.6636">is_steady : const bool</text><line style="stroke: #000000; stroke-width: 1.0;" x1="826.5" x2="951.5" y1="534.6636" y2="534.6636"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="807.5" x2="1011.5" y1="539.2578" y2="539.2578"/><ellipse cx="817.5" cy="551.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="826.5" y="553.4683">UptimeClock() = default : void</text><ellipse cx="817.5" cy="563.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="180" x="826.5" y="566.2729">now() : UptimeClock::time_point</text><line style="stroke: #000000; stroke-width: 1.0;" x1="826.5" x2="1006.5" y1="568.2729" y2="568.2729"/><!--class C_0001654867306283817272--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="86.4141" id="C_0001654867306283817272" style="stroke: #A80036; stroke-width: 1.5;" width="210" x="804.5" y="124.9531"/><ellipse cx="819.5" cy="140.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M822.4688,146.5938 Q821.8906,146.8906 821.25,147.0313 Q820.6094,147.1875 819.9063,147.1875 Q817.4063,147.1875 816.0781,145.5469 Q814.7656,143.8906 814.7656,140.7656 Q814.7656,137.6406 816.0781,135.9844 Q817.4063,134.3281 819.9063,134.3281 Q820.6094,134.3281 821.25,134.4844 Q821.9063,134.6406 822.4688,134.9375 L822.4688,137.6563 Q821.8438,137.0781 821.25,136.8125 Q820.6563,136.5313 820.0313,136.5313 Q818.6875,136.5313 818,137.6094 Q817.3125,138.6719 817.3125,140.7656 Q817.3125,142.8594 818,143.9375 Q818.6875,145 820.0313,145 Q820.6563,145 821.25,144.7344 Q821.8438,144.4531 822.4688,143.875 L822.4688,146.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="178" x="833.5" y="145.1074">UptimeClock::update_thread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="805.5" x2="1013.5" y1="156.9531" y2="156.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="805.5" x2="1013.5" y1="164.9531" y2="164.9531"/><ellipse cx="815.5" cy="176.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="824.5" y="179.1636">~update_thread() : void</text><ellipse cx="815.5" cy="189.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="824.5" y="191.9683">update_thread() = default : void</text><ellipse cx="815.5" cy="202.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="824.5" y="204.7729">thread() : void</text><!--class C_0001602748540838302362--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="278.4844" id="C_0001602748540838302362" style="stroke: #A80036; stroke-width: 1.5;" width="232" x="29.5" y="28.9531"/><ellipse cx="126.75" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M129.7188,50.5938 Q129.1406,50.8906 128.5,51.0313 Q127.8594,51.1875 127.1563,51.1875 Q124.6563,51.1875 123.3281,49.5469 Q122.0156,47.8906 122.0156,44.7656 Q122.0156,41.6406 123.3281,39.9844 Q124.6563,38.3281 127.1563,38.3281 Q127.8594,38.3281 128.5,38.4844 Q129.1563,38.6406 129.7188,38.9375 L129.7188,41.6563 Q129.0938,41.0781 128.5,40.8125 Q127.9063,40.5313 127.2813,40.5313 Q125.9375,40.5313 125.25,41.6094 Q124.5625,42.6719 124.5625,44.7656 Q124.5625,46.8594 125.25,47.9375 Q125.9375,49 127.2813,49 Q127.9063,49 128.5,48.7344 Q129.0938,48.4531 129.7188,47.875 L129.7188,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="147.25" y="49.1074">Slice</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="30.5" x2="260.5" y1="60.9531" y2="60.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="30.5" x2="260.5" y1="68.9531" y2="68.9531"/><ellipse cx="40.5" cy="80.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="49.5" y="83.1636">Slice() = default : void</text><ellipse cx="40.5" cy="93.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="49.5" y="95.9683">Slice() = default : void</text><ellipse cx="40.5" cy="106.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="49.5" y="108.7729">operator=() = default : Slice &amp;</text><ellipse cx="40.5" cy="119.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="49.5" y="121.5776">Slice() : void</text><ellipse cx="40.5" cy="132.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="49.5" y="134.3823">empty() const : bool</text><ellipse cx="40.5" cy="144.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="49.5" y="147.187">size() const : std::size_t</text><ellipse cx="40.5" cy="157.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="49.5" y="159.9917">length() const : std::size_t</text><ellipse cx="40.5" cy="170.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="49.5" y="172.7964">data() const : const std::uint8_t *</text><ellipse cx="40.5" cy="183.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="49.5" y="185.6011">operator[]() const : std::uint8_t</text><ellipse cx="40.5" cy="196.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="49.5" y="198.4058">operator+=() : Slice &amp;</text><ellipse cx="40.5" cy="208.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="49.5" y="211.2104">operator+() const : Slice</text><ellipse cx="40.5" cy="221.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="49.5" y="224.0151">remove_prefix() : void</text><ellipse cx="40.5" cy="234.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="49.5" y="236.8198">remove_suffix() : void</text><ellipse cx="40.5" cy="247.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="49.5" y="249.6245">begin() const : Slice::const_iterator</text><ellipse cx="40.5" cy="260.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="49.5" y="262.4292">cbegin() const : Slice::const_iterator</text><ellipse cx="40.5" cy="272.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="49.5" y="275.2339">end() const : Slice::const_iterator</text><ellipse cx="40.5" cy="285.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="49.5" y="288.0386">cend() const : Slice::const_iterator</text><ellipse cx="40.5" cy="298.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="49.5" y="300.8433">substr() const : Slice</text><!--class C_0001929501441132184687--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="252.875" id="C_0001929501441132184687" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="297" y="41.4531"/><ellipse cx="376.75" cy="57.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M379.7188,63.0938 Q379.1406,63.3906 378.5,63.5313 Q377.8594,63.6875 377.1563,63.6875 Q374.6563,63.6875 373.3281,62.0469 Q372.0156,60.3906 372.0156,57.2656 Q372.0156,54.1406 373.3281,52.4844 Q374.6563,50.8281 377.1563,50.8281 Q377.8594,50.8281 378.5,50.9844 Q379.1563,51.1406 379.7188,51.4375 L379.7188,54.1563 Q379.0938,53.5781 378.5,53.3125 Q377.9063,53.0313 377.2813,53.0313 Q375.9375,53.0313 375.25,54.1094 Q374.5625,55.1719 374.5625,57.2656 Q374.5625,59.3594 375.25,60.4375 Q375.9375,61.5 377.2813,61.5 Q377.9063,61.5 378.5,61.2344 Q379.0938,60.9531 379.7188,60.375 L379.7188,63.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="397.25" y="61.6074">IOUAmount</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="298" x2="533" y1="73.4531" y2="73.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="298" x2="533" y1="81.4531" y2="81.4531"/><ellipse cx="308" cy="93.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="317" y="95.6636">IOUAmount() = default : void</text><ellipse cx="308" cy="106.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="317" y="108.4683">IOUAmount() = default : void</text><ellipse cx="308" cy="118.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="317" y="121.2729">operator=() = default : IOUAmount &amp;</text><ellipse cx="308" cy="131.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="317" y="134.0776">IOUAmount() : void</text><ellipse cx="308" cy="144.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="317" y="146.8823">IOUAmount() : void</text><ellipse cx="308" cy="157.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="317" y="159.687">operator=() : IOUAmount &amp;</text><ellipse cx="308" cy="170.1836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="317" y="172.4917">operator+=() : IOUAmount &amp;</text><ellipse cx="308" cy="182.9883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="317" y="185.2964">operator-=() : IOUAmount &amp;</text><ellipse cx="308" cy="195.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="317" y="198.1011">operator-() const : IOUAmount</text><ellipse cx="308" cy="208.5977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="317" y="210.9058">operator==() const : bool</text><ellipse cx="308" cy="221.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="317" y="223.7104">operator&lt;() const : bool</text><ellipse cx="308" cy="234.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="317" y="236.5151">operator bool() const : bool</text><ellipse cx="308" cy="247.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="317" y="249.3198">signum() const : int</text><ellipse cx="308" cy="259.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="317" y="262.1245">exponent() const : int</text><ellipse cx="308" cy="272.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="317" y="274.9292">mantissa() const : std::int64_t</text><ellipse cx="308" cy="285.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="317" y="287.7339">minPositiveAmount() : IOUAmount</text><line style="stroke: #000000; stroke-width: 1.0;" x1="317" x2="508" y1="289.7339" y2="289.7339"/><!--class C_0001196237645647586305--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="291.2891" id="C_0001196237645647586305" style="stroke: #A80036; stroke-width: 1.5;" width="305" x="1048" y="383.9531"/><ellipse cx="1172.75" cy="399.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1175.7188,405.5938 Q1175.1406,405.8906 1174.5,406.0313 Q1173.8594,406.1875 1173.1563,406.1875 Q1170.6563,406.1875 1169.3281,404.5469 Q1168.0156,402.8906 1168.0156,399.7656 Q1168.0156,396.6406 1169.3281,394.9844 Q1170.6563,393.3281 1173.1563,393.3281 Q1173.8594,393.3281 1174.5,393.4844 Q1175.1563,393.6406 1175.7188,393.9375 L1175.7188,396.6563 Q1175.0938,396.0781 1174.5,395.8125 Q1173.9063,395.5313 1173.2813,395.5313 Q1171.9375,395.5313 1171.25,396.6094 Q1170.5625,397.6719 1170.5625,399.7656 Q1170.5625,401.8594 1171.25,402.9375 Q1171.9375,404 1173.2813,404 Q1173.9063,404 1174.5,403.7344 Q1175.0938,403.4531 1175.7188,402.875 L1175.7188,405.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="47" x="1193.25" y="404.1074">Section</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1049" x2="1352" y1="415.9531" y2="415.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1049" x2="1352" y1="423.9531" y2="423.9531"/><ellipse cx="1059" cy="435.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1068" y="438.1636">Section() : void</text><ellipse cx="1059" cy="448.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="1068" y="450.9683">name() const : const std::string &amp;</text><ellipse cx="1059" cy="461.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="1068" y="463.7729">lines() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="1059" cy="474.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1068" y="476.5776">values() const : const std::vector&lt;std::string&gt; &amp;</text><ellipse cx="1059" cy="487.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1068" y="489.3823">legacy() : void</text><ellipse cx="1059" cy="499.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1068" y="502.187">legacy() const : std::string</text><ellipse cx="1059" cy="512.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="61" x="1068" y="514.9917">set() : void</text><ellipse cx="1059" cy="525.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1068" y="527.7964">append() : void</text><ellipse cx="1059" cy="538.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="1068" y="540.6011">append() : void</text><ellipse cx="1059" cy="551.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1068" y="553.4058">exists() const : bool</text><ellipse cx="1059" cy="563.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1068" y="566.2104">had_trailing_comments() const : bool</text><ellipse cx="1059" cy="576.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1068" y="579.0151">empty() const : bool</text><ellipse cx="1059" cy="589.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="1068" y="591.8198">size() const : std::size_t</text><ellipse cx="1059" cy="602.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1068" y="604.6245">begin() const : Section::const_iterator</text><ellipse cx="1059" cy="615.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1068" y="617.4292">cbegin() const : Section::const_iterator</text><ellipse cx="1059" cy="627.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1068" y="630.2339">end() const : Section::const_iterator</text><ellipse cx="1059" cy="640.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1068" y="643.0386">cend() const : Section::const_iterator</text><ellipse cx="1059" cy="653.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1068" y="655.8433">get() : std::optional&lt;T&gt;</text><ellipse cx="1059" cy="666.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="1068" y="668.6479">value_or() : T</text><!--class C_0000523676121508856554--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="188.8516" id="C_0000523676121508856554" style="stroke: #A80036; stroke-width: 1.5;" width="237" x="1082" y="73.4531"/><ellipse cx="1160.25" cy="89.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1163.2188,95.0938 Q1162.6406,95.3906 1162,95.5313 Q1161.3594,95.6875 1160.6563,95.6875 Q1158.1563,95.6875 1156.8281,94.0469 Q1155.5156,92.3906 1155.5156,89.2656 Q1155.5156,86.1406 1156.8281,84.4844 Q1158.1563,82.8281 1160.6563,82.8281 Q1161.3594,82.8281 1162,82.9844 Q1162.6563,83.1406 1163.2188,83.4375 L1163.2188,86.1563 Q1162.5938,85.5781 1162,85.3125 Q1161.4063,85.0313 1160.7813,85.0313 Q1159.4375,85.0313 1158.75,86.1094 Q1158.0625,87.1719 1158.0625,89.2656 Q1158.0625,91.3594 1158.75,92.4375 Q1159.4375,93.5 1160.7813,93.5 Q1161.4063,93.5 1162,93.2344 Q1162.5938,92.9531 1163.2188,92.375 L1163.2188,95.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="1180.75" y="93.6074">BasicConfig</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1083" x2="1318" y1="105.4531" y2="105.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1083" x2="1318" y1="113.4531" y2="113.4531"/><ellipse cx="1093" cy="125.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="1102" y="127.6636">exists() const : bool</text><ellipse cx="1093" cy="138.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1102" y="140.4683">section() : Section &amp;</text><ellipse cx="1093" cy="150.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1102" y="153.2729">section() const : const Section &amp;</text><ellipse cx="1093" cy="163.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1102" y="166.0776">operator[]() const : const Section &amp;</text><ellipse cx="1093" cy="176.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1102" y="178.8823">operator[]() : Section &amp;</text><ellipse cx="1093" cy="189.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="1102" y="191.687">overwrite() : void</text><ellipse cx="1093" cy="202.1836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="1102" y="204.4917">deprecatedClearSection() : void</text><ellipse cx="1093" cy="214.9883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="1102" y="217.2964">legacy() : void</text><ellipse cx="1093" cy="227.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="1102" y="230.1011">legacy() const : std::string</text><ellipse cx="1093" cy="240.5977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1102" y="242.9058">had_trailing_comments() const : bool</text><polygon fill="#FFFF44" points="1093,248.4023,1097,252.4023,1093,256.4023,1089,252.4023" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="1102" y="255.7104">build() : void</text><!--class C_0001769343459678893400--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="112.0234" id="C_0001769343459678893400" style="stroke: #A80036; stroke-width: 1.5;" width="279" x="6" y="473.4531"/><ellipse cx="112.25" cy="489.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M115.2188,495.0938 Q114.6406,495.3906 114,495.5313 Q113.3594,495.6875 112.6563,495.6875 Q110.1563,495.6875 108.8281,494.0469 Q107.5156,492.3906 107.5156,489.2656 Q107.5156,486.1406 108.8281,484.4844 Q110.1563,482.8281 112.6563,482.8281 Q113.3594,482.8281 114,482.9844 Q114.6563,483.1406 115.2188,483.4375 L115.2188,486.1563 Q114.5938,485.5781 114,485.3125 Q113.4063,485.0313 112.7813,485.0313 Q111.4375,485.0313 110.75,486.1094 Q110.0625,487.1719 110.0625,489.2656 Q110.0625,491.3594 110.75,492.4375 Q111.4375,493.5 112.7813,493.5 Q113.4063,493.5 114,493.2344 Q114.5938,492.9531 115.2188,492.375 L115.2188,495.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="132.75" y="493.6074">Expected</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="284" y1="505.4531" y2="505.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="284" y1="513.4531" y2="513.4531"/><ellipse cx="17" cy="525.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="26" y="527.6636">Expected&lt;void, type-parameter-0-0&gt;() : void</text><ellipse cx="17" cy="538.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="540.4683">error() const : const E &amp;</text><ellipse cx="17" cy="550.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="26" y="553.2729">error() : E &amp;</text><ellipse cx="17" cy="563.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="26" y="566.0776">operator bool() const : bool</text><ellipse cx="17" cy="576.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="26" y="578.8823">Expected&lt;void, type-parameter-0-0&gt;() : void</text><!--class C_0000434356742846908842--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="48" id="C_0000434356742846908842" style="stroke: #A80036; stroke-width: 1.5;" width="121" x="1429" y="505.4531"/><ellipse cx="1444" cy="521.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1446.9688,527.0938 Q1446.3906,527.3906 1445.75,527.5313 Q1445.1094,527.6875 1444.4063,527.6875 Q1441.9063,527.6875 1440.5781,526.0469 Q1439.2656,524.3906 1439.2656,521.2656 Q1439.2656,518.1406 1440.5781,516.4844 Q1441.9063,514.8281 1444.4063,514.8281 Q1445.1094,514.8281 1445.75,514.9844 Q1446.4063,515.1406 1446.9688,515.4375 L1446.9688,518.1563 Q1446.3438,517.5781 1445.75,517.3125 Q1445.1563,517.0313 1444.5313,517.0313 Q1443.1875,517.0313 1442.5,518.1094 Q1441.8125,519.1719 1441.8125,521.2656 Q1441.8125,523.3594 1442.5,524.4375 Q1443.1875,525.5 1444.5313,525.5 Q1445.1563,525.5 1445.75,525.2344 Q1446.3438,524.9531 1446.9688,524.375 L1446.9688,527.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="1458" y="525.6074">base_uint</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="26" x="1527" y="502.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="24" x="1528" y="514.5918">256</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1430" x2="1549" y1="537.4531" y2="537.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1430" x2="1549" y1="545.4531" y2="545.4531"/><!--class C_0002091303208209235402--><rect fill="#FEFECE" filter="url(#f16osna2ua2fbc)" height="150.4375" id="C_0002091303208209235402" style="stroke: #A80036; stroke-width: 1.5;" width="234" x="1354.5" y="92.9531"/><ellipse cx="1425.75" cy="108.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1428.7188,114.5938 Q1428.1406,114.8906 1427.5,115.0313 Q1426.8594,115.1875 1426.1563,115.1875 Q1423.6563,115.1875 1422.3281,113.5469 Q1421.0156,111.8906 1421.0156,108.7656 Q1421.0156,105.6406 1422.3281,103.9844 Q1423.6563,102.3281 1426.1563,102.3281 Q1426.8594,102.3281 1427.5,102.4844 Q1428.1563,102.6406 1428.7188,102.9375 L1428.7188,105.6563 Q1428.0938,105.0781 1427.5,104.8125 Q1426.9063,104.5313 1426.2813,104.5313 Q1424.9375,104.5313 1424.25,105.6094 Q1423.5625,106.6719 1423.5625,108.7656 Q1423.5625,110.8594 1424.25,111.9375 Q1424.9375,113 1426.2813,113 Q1426.9063,113 1427.5,112.7344 Q1428.0938,112.4531 1428.7188,111.875 L1428.7188,114.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="1446.25" y="113.1074">SHAMapHash</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1355.5" x2="1587.5" y1="124.9531" y2="124.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1355.5" x2="1587.5" y1="132.9531" y2="132.9531"/><ellipse cx="1365.5" cy="144.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="1374.5" y="147.1636">SHAMapHash() = default : void</text><ellipse cx="1365.5" cy="157.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="1374.5" y="159.9683">SHAMapHash() : void</text><ellipse cx="1365.5" cy="170.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1374.5" y="172.7729">as_uint256() const : const uint256 &amp;</text><ellipse cx="1365.5" cy="183.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="1374.5" y="185.5776">as_uint256() : uint256 &amp;</text><ellipse cx="1365.5" cy="196.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1374.5" y="198.3823">isZero() const : bool</text><ellipse cx="1365.5" cy="208.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1374.5" y="211.187">isNonZero() const : bool</text><ellipse cx="1365.5" cy="221.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="1374.5" y="223.9917">signum() const : int</text><ellipse cx="1365.5" cy="234.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="1374.5" y="236.7964">zero() : void</text><!--link C_0001927026177791066667 to C_0000402213617266332336--><path d="M647.5,251.1831 C647.5,327.0031 647.5,436.0131 647.5,492.0831 " fill="none" id="C_0001927026177791066667-C_0000402213617266332336" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="640.5,250.7531,647.5,230.7531,654.5,250.7531,640.5,250.7531" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000402213617266332336 to C_0000525595014241869424--><path d="M647.5,586.6831 C647.5,626.5331 647.5,682.1931 647.5,735.5731 " fill="none" id="C_0000402213617266332336-C_0000525595014241869424" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="640.5,586.5531,647.5,566.5531,654.5,586.5531,640.5,586.5531" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0001654867306283817272 to C_0001472880491539920613--><path d="M909.5,211.2531 C909.5,275.7531 909.5,398.8131 909.5,471.2331 " fill="none" id="C_0001654867306283817272-C_0001472880491539920613" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="909.5" cy="478.3131" fill="#FFFFFF" rx="8" ry="8" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="909.5" x2="909.5" y1="470.3131" y2="486.3131"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="917.5" x2="901.5" y1="478.3131" y2="478.3131"/><!--link C_0000523676121508856554 to C_0001196237645647586305--><path d="M1200.5,275.7331 C1200.5,309.6431 1200.5,347.7231 1200.5,383.8331 " fill="none" id="C_0000523676121508856554-C_0001196237645647586305" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1200.5,262.4731,1196.5,268.4731,1200.5,274.4731,1204.5,268.4731,1200.5,262.4731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1203.5" y="343.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="36" x="1213.5" y="350.02">map_</text><!--link C_0002091303208209235402 to C_0000434356742846908842--><path d="M1467.73,243.3631 C1466.43,272.5431 1465.14,306.3131 1464.5,336.9531 C1463.29,395.2631 1475.26,462.7431 1483.07,500.0131 " fill="none" id="C_0002091303208209235402-C_0000434356742846908842" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1484.19,505.2931,1486.2231,495.6564,1483.1463,500.4033,1478.3994,497.3264,1484.19,505.2931" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0002091303208209235402 to C_0000434356742846908842--><path d="M1475.86,256.1231 C1479.98,338.2631 1485.87,455.8931 1488.34,505.2531 " fill="none" id="C_0002091303208209235402-C_0000434356742846908842" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1475.21,243.0031,1471.5116,249.1936,1475.8033,254.9884,1479.5018,248.798,1475.21,243.0031" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1483.5" y="343.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="38" x="1493.5" y="350.02">hash_</text><!--link C_0001602748540838302362 to C_0001929501441132184687--><!--link C_0001602748540838302362 to C_0001769343459678893400--><!--
@startuml
title Class Diagram for basics
abstract "Resolver" as C_0001927026177791066667
abstract C_0001927026177791066667 {
{abstract} +~Resolver() = 0 : void
{abstract} +stop_async() = 0 : void
{abstract} +stop() = 0 : void
{abstract} +start() = 0 : void
{abstract} +resolve() = 0 : void
+resolve() : void
}
class "ResolverAsio" as C_0000402213617266332336
class C_0000402213617266332336 {
+ResolverAsio() = default : void
{static} +New() : std::unique_ptr<ResolverAsio>
}
class "ResolverAsioImpl" as C_0000525595014241869424
class C_0000525595014241869424 {
+ResolverAsioImpl() : void
+~ResolverAsioImpl() : void
+asyncHandlersComplete() : void
+start() : void
+stop_async() : void
+stop() : void
+resolve() : void
+do_stop() : void
+do_finish() : void
+parseName() : ResolverAsioImpl::HostAndPort
+do_work() : void
+do_resolve() : void
+m_journal : beast::Journal
+m_io_service : boost::asio::io_service &
+m_strand : boost::asio::io_service::strand
+m_resolver : boost::asio::ip::tcp::resolver
+m_cv : std::condition_variable
+m_mut : std::mutex
+m_asyncHandlersCompleted : bool
+m_stop_called : std::atomic<bool>
+m_stopped : std::atomic<bool>
+m_work : std::deque<Work>
}
class "UptimeClock" as C_0001472880491539920613
class C_0001472880491539920613 {
+UptimeClock() = default : void
{static} +now() : UptimeClock::time_point
{static} +is_steady : const bool
}
class "UptimeClock::update_thread" as C_0001654867306283817272
class C_0001654867306283817272 {
+~update_thread() : void
+update_thread() = default : void
+thread() : void
}
class "Slice" as C_0001602748540838302362
class C_0001602748540838302362 {
+Slice() = default : void
+Slice() = default : void
+operator=() = default : Slice &
+Slice() : void
+empty() const : bool
+size() const : std::size_t
+length() const : std::size_t
+data() const : const std::uint8_t *
+operator[]() const : std::uint8_t
+operator+=() : Slice &
+operator+() const : Slice
+remove_prefix() : void
+remove_suffix() : void
+begin() const : Slice::const_iterator
+cbegin() const : Slice::const_iterator
+end() const : Slice::const_iterator
+cend() const : Slice::const_iterator
+substr() const : Slice
}
class "IOUAmount" as C_0001929501441132184687
class C_0001929501441132184687 {
+IOUAmount() = default : void
+IOUAmount() = default : void
+operator=() = default : IOUAmount &
+IOUAmount() : void
+IOUAmount() : void
+operator=() : IOUAmount &
+operator+=() : IOUAmount &
+operator-=() : IOUAmount &
+operator-() const : IOUAmount
+operator==() const : bool
+operator<() const : bool
+operator bool() const : bool
+signum() const : int
+exponent() const : int
+mantissa() const : std::int64_t
{static} +minPositiveAmount() : IOUAmount
}
class "Section" as C_0001196237645647586305
class C_0001196237645647586305 {
+Section() : void
+name() const : const std::string &
+lines() const : const std::vector<std::string> &
+values() const : const std::vector<std::string> &
+legacy() : void
+legacy() const : std::string
+set() : void
+append() : void
+append() : void
+exists() const : bool
+had_trailing_comments() const : bool
+empty() const : bool
+size() const : std::size_t
+begin() const : Section::const_iterator
+cbegin() const : Section::const_iterator
+end() const : Section::const_iterator
+cend() const : Section::const_iterator
+get() : std::optional<T>
+value_or() : T
}
class "BasicConfig" as C_0000523676121508856554
class C_0000523676121508856554 {
+exists() const : bool
+section() : Section &
+section() const : const Section &
+operator[]() const : const Section &
+operator[]() : Section &
+overwrite() : void
+deprecatedClearSection() : void
+legacy() : void
+legacy() const : std::string
+had_trailing_comments() const : bool
#build() : void
}
class "Expected" as C_0001769343459678893400
class C_0001769343459678893400 {
+Expected<void, type-parameter-0-0>() : void
+error() const : const E &
+error() : E &
+operator bool() const : bool
+Expected<void, type-parameter-0-0>() : void
}
class "base_uint<256>" as C_0000434356742846908842
class C_0000434356742846908842 {
}
class "SHAMapHash" as C_0002091303208209235402
class C_0002091303208209235402 {
+SHAMapHash() = default : void
+SHAMapHash() : void
+as_uint256() const : const uint256 &
+as_uint256() : uint256 &
+isZero() const : bool
+isNonZero() const : bool
+signum() const : int
+zero() : void
}
C_0001927026177791066667 <|- - C_0000402213617266332336
C_0000402213617266332336 <|- - C_0000525595014241869424
C_0001654867306283817272 - -+ C_0001472880491539920613
C_0000523676121508856554 o- - C_0001196237645647586305 : -map_
C_0002091303208209235402 ..> C_0000434356742846908842
C_0002091303208209235402 o- - C_0000434356742846908842 : -hash_
@enduml

PlantUML version 1.2018.13(Mon Nov 26 17:11:51 UTC 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.17+8-post-Ubuntu-1ubuntu220.04
Operating System: Linux
OS Version: 5.4.0-91-generic
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>