@startuml
participant "OverlayImpl" as C_0001116672667747658761
[-> C_0001116672667747658761 : broadcast(protocol::TMProposeSet &)
activate C_0001116672667747658761
C_0001116672667747658761 -> C_0001116672667747658761 : for_each((lambda at /home/bramv/src/projects/rippled/src/ripple/overlay/impl/OverlayImpl.cpp:1227:14) &&)
activate C_0001116672667747658761
loop
alt
participant "OverlayImpl::broadcast(protocol::TMProposeSet &)::(lambda src/ripple/overlay/impl/OverlayImpl.cpp:1227:14)" as C_0000042931652662938771
C_0001116672667747658761 -> C_0000042931652662938771 : operator()()
activate C_0000042931652662938771
participant "PeerImp" as C_0002118346084380460994
C_0000042931652662938771 -> C_0002118346084380460994 : send(const std::shared_ptr<Message> &)
activate C_0002118346084380460994
participant "Message" as C_0000073086002242562289
C_0002118346084380460994 -> C_0000073086002242562289 : getValidatorKey()
activate C_0000073086002242562289
C_0000073086002242562289 --> C_0002118346084380460994
deactivate C_0000073086002242562289
alt
participant "reduce_relay::Squelch<UptimeClock>" as C_0001668540836965143527
C_0002118346084380460994 -> C_0001668540836965143527 : **[**expireSquelch(const PublicKey &)**]**
activate C_0001668540836965143527
participant "reduce_relay::Squelch<clock_type>" as C_0000525118826224551864
C_0001668540836965143527 -> C_0000525118826224551864 : removeSquelch(const PublicKey &)
activate C_0000525118826224551864
deactivate C_0000525118826224551864
C_0001668540836965143527 -> C_0000525118826224551864 : removeSquelch(const PublicKey &)
activate C_0000525118826224551864
deactivate C_0000525118826224551864
participant "UptimeClock" as C_0001472880491539920613
C_0001668540836965143527 -> C_0001472880491539920613 : __now()__
activate C_0001472880491539920613
C_0001472880491539920613 --> C_0001668540836965143527
deactivate C_0001472880491539920613
C_0001668540836965143527 -> C_0000525118826224551864 : removeSquelch(const PublicKey &)
activate C_0000525118826224551864
deactivate C_0000525118826224551864
C_0001668540836965143527 --> C_0002118346084380460994
deactivate C_0001668540836965143527
end
C_0002118346084380460994 -> C_0000073086002242562289 : getCategory()
activate C_0000073086002242562289
C_0000073086002242562289 --> C_0002118346084380460994
deactivate C_0000073086002242562289
participant "src/ripple/basics/safe_cast.h" as C_0002165997920711711627
C_0002118346084380460994 -> C_0002165997920711711627 : safe_cast<TrafficCount::category,unsigned long>(unsigned long)
activate C_0002165997920711711627
C_0002165997920711711627 -> C_0002165997920711711627 : safe_cast<unsigned long,unsigned long>(unsigned long)
activate C_0002165997920711711627
C_0002165997920711711627 --> C_0002165997920711711627
deactivate C_0002165997920711711627
C_0002165997920711711627 --> C_0002118346084380460994
deactivate C_0002165997920711711627
C_0002118346084380460994 -> C_0000073086002242562289 : getBuffer(Message::Compressed)
activate C_0000073086002242562289
C_0000073086002242562289 --> C_0002118346084380460994
deactivate C_0000073086002242562289
C_0002118346084380460994 -> C_0001116672667747658761 : reportTraffic(TrafficCount::category,bool,int)
activate C_0001116672667747658761
participant "TrafficCount" as C_0000695798640095218486
C_0001116672667747658761 -> C_0000695798640095218486 : addCount(TrafficCount::category,bool,int)
activate C_0000695798640095218486
deactivate C_0000695798640095218486
deactivate C_0001116672667747658761
alt
else
C_0002118346084380460994 -> C_0002118346084380460994 : name()
activate C_0002118346084380460994
C_0002118346084380460994 --> C_0002118346084380460994
deactivate C_0002118346084380460994
end
C_0002118346084380460994 -> C_0000073086002242562289 : getBuffer(Message::Compressed)
activate C_0000073086002242562289
C_0000073086002242562289 --> C_0002118346084380460994
deactivate C_0000073086002242562289
deactivate C_0002118346084380460994
C_0000042931652662938771 --> C_0001116672667747658761
deactivate C_0000042931652662938771
end
end
deactivate C_0001116672667747658761
deactivate C_0001116672667747658761
@enduml
