<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2593px" preserveAspectRatio="none" style="width:2042px;height:2593px;" version="1.1" viewBox="0 0 2042 2593" width="2042px" zoomAndPan="magnify"><defs><filter height="300%" id="fevql2wiim3kd" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="283" x="834.5" y="16.708">Class Diagram for app/reporting</text><!--class C_0001270395620897132534--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="214.4609" id="C_0001270395620897132534" style="stroke: #A80036; stroke-width: 1.5;" width="227" x="205.57" y="2048.4531"/><ellipse cx="269.82" cy="2064.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M272.7888,2070.0938 Q272.2106,2070.3906 271.57,2070.5313 Q270.9294,2070.6875 270.2263,2070.6875 Q267.7263,2070.6875 266.3981,2069.0469 Q265.0856,2067.3906 265.0856,2064.2656 Q265.0856,2061.1406 266.3981,2059.4844 Q267.7263,2057.8281 270.2263,2057.8281 Q270.9294,2057.8281 271.57,2057.9844 Q272.2263,2058.1406 272.7888,2058.4375 L272.7888,2061.1563 Q272.1638,2060.5781 271.57,2060.3125 Q270.9763,2060.0313 270.3513,2060.0313 Q269.0075,2060.0313 268.32,2061.1094 Q267.6325,2062.1719 267.6325,2064.2656 Q267.6325,2066.3594 268.32,2067.4375 Q269.0075,2068.5 270.3513,2068.5 Q270.9763,2068.5 271.57,2068.2344 Q272.1638,2067.9531 272.7888,2067.375 L272.7888,2070.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="90" x="290.32" y="2068.6074">STLedgerEntry</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="206.57" x2="431.57" y1="2080.4531" y2="2080.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="206.57" x2="431.57" y1="2088.4531" y2="2088.4531"/><ellipse cx="216.57" cy="2100.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="225.57" y="2102.6636">STLedgerEntry() : void</text><ellipse cx="216.57" cy="2113.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="225.57" y="2115.4683">STLedgerEntry() : void</text><ellipse cx="216.57" cy="2125.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="225.57" y="2128.2729">STLedgerEntry() : void</text><ellipse cx="216.57" cy="2138.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="225.57" y="2141.0776">STLedgerEntry() : void</text><ellipse cx="216.57" cy="2151.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="225.57" y="2153.8823">STLedgerEntry() : void</text><ellipse cx="216.57" cy="2164.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="225.57" y="2166.687">getSType() const : SerializedTypeID</text><ellipse cx="216.57" cy="2177.1836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="225.57" y="2179.4917">getFullText() const : std::string</text><ellipse cx="216.57" cy="2189.9883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="225.57" y="2192.2964">getText() const : std::string</text><ellipse cx="216.57" cy="2202.793" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="225.57" y="2205.1011">getJson() const : Json::Value</text><ellipse cx="216.57" cy="2215.5977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="225.57" y="2217.9058">key() const : const uint256 &amp;</text><ellipse cx="216.57" cy="2228.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="225.57" y="2230.7104">getType() const : LedgerEntryType</text><ellipse cx="216.57" cy="2241.207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="225.57" y="2243.5151">isThreadedType() const : bool</text><ellipse cx="216.57" cy="2254.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="225.57" y="2256.3198">thread() : bool</text><!--class C_0000364313548677557109--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="752.2578" id="C_0000364313548677557109" style="stroke: #A80036; stroke-width: 1.5;" width="394" x="102.07" y="513.9531"/><ellipse cx="273.32" cy="529.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M276.2888,535.5938 Q275.7106,535.8906 275.07,536.0313 Q274.4294,536.1875 273.7263,536.1875 Q271.2263,536.1875 269.8981,534.5469 Q268.5856,532.8906 268.5856,529.7656 Q268.5856,526.6406 269.8981,524.9844 Q271.2263,523.3281 273.7263,523.3281 Q274.4294,523.3281 275.07,523.4844 Q275.7263,523.6406 276.2888,523.9375 L276.2888,526.6563 Q275.6638,526.0781 275.07,525.8125 Q274.4763,525.5313 273.8513,525.5313 Q272.5075,525.5313 271.82,526.6094 Q271.1325,527.6719 271.1325,529.7656 Q271.1325,531.8594 271.82,532.9375 Q272.5075,534 273.8513,534 Q274.4763,534 275.07,533.7344 Q275.6638,533.4531 276.2888,532.875 L276.2888,535.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="293.82" y="534.1074">Ledger</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="103.07" x2="495.07" y1="545.9531" y2="545.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="103.07" x2="495.07" y1="553.9531" y2="553.9531"/><ellipse cx="113.07" cy="565.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="122.07" y="568.1636">Ledger() : void</text><ellipse cx="113.07" cy="578.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="122.07" y="580.9683">operator=() : Ledger &amp;</text><ellipse cx="113.07" cy="591.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="122.07" y="593.7729">Ledger() : void</text><ellipse cx="113.07" cy="604.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="122.07" y="606.5776">Ledger() : void</text><ellipse cx="113.07" cy="617.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="122.07" y="619.3823">Ledger() : void</text><ellipse cx="113.07" cy="629.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="122.07" y="632.187">Ledger() : void</text><ellipse cx="113.07" cy="642.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="122.07" y="644.9917">Ledger() : void</text><ellipse cx="113.07" cy="655.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="122.07" y="657.7964">~Ledger() = default : void</text><ellipse cx="113.07" cy="668.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="122.07" y="670.6011">open() const : bool</text><ellipse cx="113.07" cy="681.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="185" x="122.07" y="683.4058">info() const : const LedgerInfo &amp;</text><ellipse cx="113.07" cy="693.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="122.07" y="696.2104">setLedgerInfo() : void</text><ellipse cx="113.07" cy="706.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="122.07" y="709.0151">fees() const : const Fees &amp;</text><ellipse cx="113.07" cy="719.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="122.07" y="721.8198">rules() const : const Rules &amp;</text><ellipse cx="113.07" cy="732.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="122.07" y="734.6245">exists() const : bool</text><ellipse cx="113.07" cy="745.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="122.07" y="747.4292">exists() const : bool</text><ellipse cx="113.07" cy="757.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="122.07" y="760.2339">succ() const : std::optional&lt;uint256&gt;</text><ellipse cx="113.07" cy="770.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="122.07" y="773.0386">read() const : std::shared_ptr&lt;const SLE&gt;</text><ellipse cx="113.07" cy="783.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="122.07" y="785.8433">slesBegin() const : std::unique_ptr&lt;sles_type::iter_base&gt;</text><ellipse cx="113.07" cy="796.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="319" x="122.07" y="798.6479">slesEnd() const : std::unique_ptr&lt;sles_type::iter_base&gt;</text><ellipse cx="113.07" cy="809.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="368" x="122.07" y="811.4526">slesUpperBound() const : std::unique_ptr&lt;sles_type::iter_base&gt;</text><ellipse cx="113.07" cy="821.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="316" x="122.07" y="824.2573">txsBegin() const : std::unique_ptr&lt;txs_type::iter_base&gt;</text><ellipse cx="113.07" cy="834.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="122.07" y="837.062">txsEnd() const : std::unique_ptr&lt;txs_type::iter_base&gt;</text><ellipse cx="113.07" cy="847.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="122.07" y="849.8667">txExists() const : bool</text><ellipse cx="113.07" cy="860.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="122.07" y="862.6714">txRead() const : ReadView::tx_type</text><ellipse cx="113.07" cy="873.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="122.07" y="875.4761">digest() const : std::optional&lt;digest_type&gt;</text><ellipse cx="113.07" cy="885.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="122.07" y="888.2808">rawErase() : void</text><ellipse cx="113.07" cy="898.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="122.07" y="901.0854">rawInsert() : void</text><ellipse cx="113.07" cy="911.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="122.07" y="913.8901">rawErase() : void</text><ellipse cx="113.07" cy="924.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="122.07" y="926.6948">rawReplace() : void</text><ellipse cx="113.07" cy="937.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="122.07" y="939.4995">rawDestroyXRP() : void</text><ellipse cx="113.07" cy="949.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="122.07" y="952.3042">rawTxInsert() : void</text><ellipse cx="113.07" cy="962.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="122.07" y="965.1089">rawTxInsertWithHash() : uint256</text><ellipse cx="113.07" cy="975.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="122.07" y="977.9136">setValidated() const : void</text><ellipse cx="113.07" cy="988.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="122.07" y="990.7183">setAccepted() : void</text><ellipse cx="113.07" cy="1001.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="122.07" y="1003.5229">setImmutable() : void</text><ellipse cx="113.07" cy="1014.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="122.07" y="1016.3276">isImmutable() const : bool</text><ellipse cx="113.07" cy="1026.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="122.07" y="1029.1323">setFull() const : void</text><ellipse cx="113.07" cy="1039.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="122.07" y="1041.937">setTotalDrops() : void</text><ellipse cx="113.07" cy="1052.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="122.07" y="1054.7417">stateMap() const : const SHAMap &amp;</text><ellipse cx="113.07" cy="1065.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="122.07" y="1067.5464">stateMap() : SHAMap &amp;</text><ellipse cx="113.07" cy="1078.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="122.07" y="1080.3511">txMap() const : const SHAMap &amp;</text><ellipse cx="113.07" cy="1090.8477" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="122.07" y="1093.1558">txMap() : SHAMap &amp;</text><ellipse cx="113.07" cy="1103.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="122.07" y="1105.9604">addSLE() : bool</text><ellipse cx="113.07" cy="1116.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="122.07" y="1118.7651">updateSkipList() : void</text><ellipse cx="113.07" cy="1129.2617" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="122.07" y="1131.5698">walkLedger() const : bool</text><ellipse cx="113.07" cy="1142.0664" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="122.07" y="1144.3745">assertSensible() const : bool</text><ellipse cx="113.07" cy="1154.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="122.07" y="1157.1792">invariants() const : void</text><ellipse cx="113.07" cy="1167.6758" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="122.07" y="1169.9839">unshare() const : void</text><ellipse cx="113.07" cy="1180.4805" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="122.07" y="1182.7886">negativeUNL() const : std::unordered_set&lt;PublicKey&gt;</text><ellipse cx="113.07" cy="1193.2852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="122.07" y="1195.5933">validatorToDisable() const : std::optional&lt;PublicKey&gt;</text><ellipse cx="113.07" cy="1206.0898" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="122.07" y="1208.3979">validatorToReEnable() const : std::optional&lt;PublicKey&gt;</text><ellipse cx="113.07" cy="1218.8945" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="122.07" y="1221.2026">updateNegativeUNL() : void</text><ellipse cx="113.07" cy="1231.6992" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="122.07" y="1234.0073">isFlagLedger() const : bool</text><ellipse cx="113.07" cy="1244.5039" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="122.07" y="1246.812">isVotingLedger() const : bool</text><ellipse cx="113.07" cy="1257.3086" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="122.07" y="1259.6167">peek() const : std::shared_ptr&lt;SLE&gt;</text><!--class C_0000539094050509181559--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="73.6094" id="C_0000539094050509181559" style="stroke: #A80036; stroke-width: 1.5;" width="238" x="850.07" y="2118.4531"/><ellipse cx="911.82" cy="2134.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M914.7888,2140.0938 Q914.2106,2140.3906 913.57,2140.5313 Q912.9294,2140.6875 912.2263,2140.6875 Q909.7263,2140.6875 908.3981,2139.0469 Q907.0856,2137.3906 907.0856,2134.2656 Q907.0856,2131.1406 908.3981,2129.4844 Q909.7263,2127.8281 912.2263,2127.8281 Q912.9294,2127.8281 913.57,2127.9844 Q914.2263,2128.1406 914.7888,2128.4375 L914.7888,2131.1563 Q914.1638,2130.5781 913.57,2130.3125 Q912.9763,2130.0313 912.3513,2130.0313 Q911.0075,2130.0313 910.32,2131.1094 Q909.6325,2132.1719 909.6325,2134.2656 Q909.6325,2136.3594 910.32,2137.4375 Q911.0075,2138.5 912.3513,2138.5 Q912.9763,2138.5 913.57,2138.2344 Q914.1638,2137.9531 914.7888,2137.375 L914.7888,2140.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="932.32" y="2138.6074">RPC::JsonContext</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="851.07" x2="1087.07" y1="2150.4531" y2="2150.4531"/><ellipse cx="861.07" cy="2162.3555" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="870.07" y="2164.6636">params : Json::Value</text><ellipse cx="861.07" cy="2175.1602" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="870.07" y="2177.4683">headers : RPC::JsonContext::Headers</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="851.07" x2="1087.07" y1="2184.0625" y2="2184.0625"/><!--class C_0000024089222317618888--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="854.6953" id="C_0000024089222317618888" style="stroke: #A80036; stroke-width: 1.5;" width="458" x="1474.07" y="1727.9531"/><ellipse cx="1664.32" cy="1743.9531" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1664.4294,1739.2969 L1663.2731,1744.375 L1665.6013,1744.375 L1664.4294,1739.2969 Z M1662.945,1737.0625 L1665.9294,1737.0625 L1669.2888,1749.4531 L1666.8356,1749.4531 L1666.07,1746.3906 L1662.7888,1746.3906 L1662.0388,1749.4531 L1659.6013,1749.4531 L1662.945,1737.0625 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="69" x="1684.82" y="1748.1074">Application</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1475.07" x2="1931.07" y1="1759.9531" y2="1759.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1475.07" x2="1931.07" y1="1767.9531" y2="1767.9531"/><ellipse cx="1485.07" cy="1779.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="277" x="1494.07" y="1782.1636">getMasterMutex() = 0 : Application::MutexType &amp;</text><ellipse cx="1485.07" cy="1792.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1494.07" y="1794.9683">Application() : void</text><ellipse cx="1485.07" cy="1805.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="1494.07" y="1807.7729">~Application() = default : void</text><ellipse cx="1485.07" cy="1818.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="100" x="1494.07" y="1820.5776">setup() = 0 : bool</text><ellipse cx="1485.07" cy="1831.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="94" x="1494.07" y="1833.3823">start() = 0 : void</text><ellipse cx="1485.07" cy="1843.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="86" x="1494.07" y="1846.187">run() = 0 : void</text><ellipse cx="1485.07" cy="1856.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="127" x="1494.07" y="1858.9917">signalStop() = 0 : void</text><ellipse cx="1485.07" cy="1869.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="160" x="1494.07" y="1871.7964">checkSigs() const = 0 : bool</text><ellipse cx="1485.07" cy="1882.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="124" x="1494.07" y="1884.6011">checkSigs() = 0 : void</text><ellipse cx="1485.07" cy="1895.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="1494.07" y="1897.4058">isStopping() const = 0 : bool</text><ellipse cx="1485.07" cy="1907.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="109" x="1494.07" y="1910.2104">logs() = 0 : Logs &amp;</text><ellipse cx="1485.07" cy="1920.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="128" x="1494.07" y="1923.0151">config() = 0 : Config &amp;</text><ellipse cx="1485.07" cy="1933.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="259" x="1494.07" y="1935.8198">getIOService() = 0 : boost::asio::io_service &amp;</text><ellipse cx="1485.07" cy="1946.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="274" x="1494.07" y="1948.6245">getCollectorManager() = 0 : CollectorManager &amp;</text><ellipse cx="1485.07" cy="1959.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="177" x="1494.07" y="1961.4292">getNodeFamily() = 0 : Family &amp;</text><ellipse cx="1485.07" cy="1971.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="178" x="1494.07" y="1974.2339">getShardFamily() = 0 : Family *</text><ellipse cx="1485.07" cy="1984.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="191" x="1494.07" y="1987.0386">timeKeeper() = 0 : TimeKeeper &amp;</text><ellipse cx="1485.07" cy="1997.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="1494.07" y="1999.8433">getJobQueue() = 0 : JobQueue &amp;</text><ellipse cx="1485.07" cy="2010.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="236" x="1494.07" y="2012.6479">getTempNodeCache() = 0 : NodeCache &amp;</text><ellipse cx="1485.07" cy="2023.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="196" x="1494.07" y="2025.4526">cachedSLEs() = 0 : CachedSLEs &amp;</text><ellipse cx="1485.07" cy="2035.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="274" x="1494.07" y="2038.2573">getAmendmentTable() = 0 : AmendmentTable &amp;</text><ellipse cx="1485.07" cy="2048.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="1494.07" y="2051.062">getHashRouter() = 0 : HashRouter &amp;</text><ellipse cx="1485.07" cy="2061.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="205" x="1494.07" y="2063.8667">getFeeTrack() = 0 : LoadFeeTrack &amp;</text><ellipse cx="1485.07" cy="2074.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="1494.07" y="2076.6714">getLoadManager() = 0 : LoadManager &amp;</text><ellipse cx="1485.07" cy="2087.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="1494.07" y="2089.4761">overlay() = 0 : Overlay &amp;</text><ellipse cx="1485.07" cy="2099.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="120" x="1494.07" y="2102.2808">getTxQ() = 0 : TxQ &amp;</text><ellipse cx="1485.07" cy="2112.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="184" x="1494.07" y="2115.0854">validators() = 0 : ValidatorList &amp;</text><ellipse cx="1485.07" cy="2125.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="1494.07" y="2127.8901">validatorSites() = 0 : ValidatorSite &amp;</text><ellipse cx="1485.07" cy="2138.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="1494.07" y="2140.6948">validatorManifests() = 0 : ManifestCache &amp;</text><ellipse cx="1485.07" cy="2151.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="249" x="1494.07" y="2153.4995">publisherManifests() = 0 : ManifestCache &amp;</text><ellipse cx="1485.07" cy="2163.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="1494.07" y="2166.3042">cluster() = 0 : Cluster &amp;</text><ellipse cx="1485.07" cy="2176.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="1494.07" y="2179.1089">peerReservations() = 0 : PeerReservationTable &amp;</text><ellipse cx="1485.07" cy="2189.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="221" x="1494.07" y="2191.9136">getValidations() = 0 : RCLValidations &amp;</text><ellipse cx="1485.07" cy="2202.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="258" x="1494.07" y="2204.7183">getNodeStore() = 0 : NodeStore::Database &amp;</text><ellipse cx="1485.07" cy="2215.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="293" x="1494.07" y="2217.5229">getShardStore() = 0 : NodeStore::DatabaseShard *</text><ellipse cx="1485.07" cy="2228.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="340" x="1494.07" y="2230.3276">getShardArchiveHandler() = 0 : RPC::ShardArchiveHandler *</text><ellipse cx="1485.07" cy="2240.8242" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="258" x="1494.07" y="2243.1323">getInboundLedgers() = 0 : InboundLedgers &amp;</text><ellipse cx="1485.07" cy="2253.6289" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="314" x="1494.07" y="2255.937">getInboundTransactions() = 0 : InboundTransactions &amp;</text><ellipse cx="1485.07" cy="2266.4336" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="432" x="1494.07" y="2268.7417">getAcceptedLedgerCache() = 0 : TaggedCache&lt;uint256,AcceptedLedger&gt; &amp;</text><ellipse cx="1485.07" cy="2279.2383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="232" x="1494.07" y="2281.5464">getLedgerMaster() = 0 : LedgerMaster &amp;</text><ellipse cx="1485.07" cy="2292.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="242" x="1494.07" y="2294.3511">getLedgerCleaner() = 0 : LedgerCleaner &amp;</text><ellipse cx="1485.07" cy="2304.8477" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="252" x="1494.07" y="2307.1558">getLedgerReplayer() = 0 : LedgerReplayer &amp;</text><ellipse cx="1485.07" cy="2317.6523" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="168" x="1494.07" y="2319.9604">getOPs() = 0 : NetworkOPs &amp;</text><ellipse cx="1485.07" cy="2330.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="1494.07" y="2332.7651">getOrderBookDB() = 0 : OrderBookDB &amp;</text><ellipse cx="1485.07" cy="2343.2617" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="288" x="1494.07" y="2345.5698">getMasterTransaction() = 0 : TransactionMaster &amp;</text><ellipse cx="1485.07" cy="2356.0664" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="193" x="1494.07" y="2358.3745">getPerfLog() = 0 : perf::PerfLog &amp;</text><ellipse cx="1485.07" cy="2368.8711" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="342" x="1494.07" y="2371.1792">nodeIdentity() = 0 : const std::pair&lt;PublicKey,SecretKey&gt; &amp;</text><ellipse cx="1485.07" cy="2381.6758" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="307" x="1494.07" y="2383.9839">getValidationPublicKey() const = 0 : const PublicKey &amp;</text><ellipse cx="1485.07" cy="2394.4805" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="288" x="1494.07" y="2396.7886">getResourceManager() = 0 : Resource::Manager &amp;</text><ellipse cx="1485.07" cy="2407.2852" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="232" x="1494.07" y="2409.5933">getPathRequests() = 0 : PathRequests &amp;</text><ellipse cx="1485.07" cy="2420.0898" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="1494.07" y="2422.3979">getSHAMapStore() = 0 : SHAMapStore &amp;</text><ellipse cx="1485.07" cy="2432.8945" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="218" x="1494.07" y="2435.2026">pendingSaves() = 0 : PendingSaves &amp;</text><ellipse cx="1485.07" cy="2445.6992" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="308" x="1494.07" y="2448.0073">accountIDCache() const = 0 : const AccountIDCache &amp;</text><ellipse cx="1485.07" cy="2458.5039" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="1494.07" y="2460.812">openLedger() = 0 : OpenLedger &amp;</text><ellipse cx="1485.07" cy="2471.3086" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="264" x="1494.07" y="2473.6167">openLedger() const = 0 : const OpenLedger &amp;</text><ellipse cx="1485.07" cy="2484.1133" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="294" x="1494.07" y="2486.4214">getRelationalDatabase() = 0 : RelationalDatabase &amp;</text><ellipse cx="1485.07" cy="2496.918" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="261" x="1494.07" y="2499.2261">getIOLatency() = 0 : std::chrono::milliseconds</text><ellipse cx="1485.07" cy="2509.7227" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="224" x="1494.07" y="2512.0308">getReportingETL() = 0 : ReportingETL &amp;</text><ellipse cx="1485.07" cy="2522.5273" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="1494.07" y="2524.8354">serverOkay() = 0 : bool</text><ellipse cx="1485.07" cy="2535.332" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="162" x="1494.07" y="2537.6401">journal() = 0 : beast::Journal</text><ellipse cx="1485.07" cy="2548.1367" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="154" x="1494.07" y="2550.4448">fdRequired() const = 0 : int</text><ellipse cx="1485.07" cy="2560.9414" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="201" x="1494.07" y="2563.2495">getWalletDB() = 0 : DatabaseCon &amp;</text><ellipse cx="1485.07" cy="2573.7461" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="253" x="1494.07" y="2576.0542">getMaxDisallowedLedger() = 0 : LedgerIndex</text><!--class C_0001749398618357613571--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="112.0234" id="C_0001749398618357613571" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="1123.57" y="2099.4531"/><ellipse cx="1196.82" cy="2115.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1199.7888,2121.0938 Q1199.2106,2121.3906 1198.57,2121.5313 Q1197.9294,2121.6875 1197.2263,2121.6875 Q1194.7263,2121.6875 1193.3981,2120.0469 Q1192.0856,2118.3906 1192.0856,2115.2656 Q1192.0856,2112.1406 1193.3981,2110.4844 Q1194.7263,2108.8281 1197.2263,2108.8281 Q1197.9294,2108.8281 1198.57,2108.9844 Q1199.2263,2109.1406 1199.7888,2109.4375 L1199.7888,2112.1563 Q1199.1638,2111.5781 1198.57,2111.3125 Q1197.9763,2111.0313 1197.3513,2111.0313 Q1196.0075,2111.0313 1195.32,2112.1094 Q1194.6325,2113.1719 1194.6325,2115.2656 Q1194.6325,2117.3594 1195.32,2118.4375 Q1196.0075,2119.5 1197.3513,2119.5 Q1197.9763,2119.5 1198.57,2119.2344 Q1199.1638,2118.9531 1199.7888,2118.375 L1199.7888,2121.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="160" x="1217.32" y="2119.6074">NetworkValidatedLedgers</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1124.57" x2="1437.57" y1="2131.4531" y2="2131.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1124.57" x2="1437.57" y1="2139.4531" y2="2139.4531"/><ellipse cx="1134.57" cy="2151.3555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1143.57" y="2153.6636">push() : void</text><ellipse cx="1134.57" cy="2164.1602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1143.57" y="2166.4683">getMostRecent() const : std::optional&lt;uint32_t&gt;</text><ellipse cx="1134.57" cy="2176.9648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="289" x="1143.57" y="2179.2729">tryGetMostRecent() const : std::optional&lt;uint32_t&gt;</text><ellipse cx="1134.57" cy="2189.7695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="204" x="1143.57" y="2192.0776">waitUntilValidatedByNetwork() : bool</text><ellipse cx="1134.57" cy="2202.5742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="1143.57" y="2204.8823">stop() : void</text><!--class C_0001377976586182950689--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="48" id="C_0001377976586182950689" style="stroke: #A80036; stroke-width: 1.5;" width="287" x="487.57" y="2131.4531"/><ellipse cx="502.57" cy="2147.4531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M505.5388,2153.0938 Q504.9606,2153.3906 504.32,2153.5313 Q503.6794,2153.6875 502.9763,2153.6875 Q500.4763,2153.6875 499.1481,2152.0469 Q497.8356,2150.3906 497.8356,2147.2656 Q497.8356,2144.1406 499.1481,2142.4844 Q500.4763,2140.8281 502.9763,2140.8281 Q503.6794,2140.8281 504.32,2140.9844 Q504.9763,2141.1406 505.5388,2141.4375 L505.5388,2144.1563 Q504.9138,2143.5781 504.32,2143.3125 Q503.7263,2143.0313 503.1013,2143.0313 Q501.7575,2143.0313 501.07,2144.1094 Q500.3825,2145.1719 500.3825,2147.2656 Q500.3825,2149.3594 501.07,2150.4375 Q501.7575,2151.5 503.1013,2151.5 Q503.7263,2151.5 504.32,2151.2344 Q504.9138,2150.9531 505.5388,2150.375 L505.5388,2153.0938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="516.57" y="2151.6074">ThreadSafeQueue</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="140" x="637.57" y="2128.4531"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="638.57" y="2140.5918">std::shared_ptr&lt;SLE&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="488.57" x2="773.57" y1="2163.4531" y2="2163.4531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="488.57" x2="773.57" y1="2171.4531" y2="2171.4531"/><!--class C_0002178712016612181138--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="355.3125" id="C_0002178712016612181138" style="stroke: #A80036; stroke-width: 1.5;" width="569" x="684.57" y="1295.9531"/><ellipse cx="932.32" cy="1311.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M935.2888,1317.5938 Q934.7106,1317.8906 934.07,1318.0313 Q933.4294,1318.1875 932.7263,1318.1875 Q930.2263,1318.1875 928.8981,1316.5469 Q927.5856,1314.8906 927.5856,1311.7656 Q927.5856,1308.6406 928.8981,1306.9844 Q930.2263,1305.3281 932.7263,1305.3281 Q933.4294,1305.3281 934.07,1305.4844 Q934.7263,1305.6406 935.2888,1305.9375 L935.2888,1308.6563 Q934.6638,1308.0781 934.07,1307.8125 Q933.4763,1307.5313 932.8513,1307.5313 Q931.5075,1307.5313 930.82,1308.6094 Q930.1325,1309.6719 930.1325,1311.7656 Q930.1325,1313.8594 930.82,1314.9375 Q931.5075,1316 932.8513,1316 Q933.4763,1316 934.07,1315.7344 Q934.6638,1315.4531 935.2888,1314.875 L935.2888,1317.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="952.82" y="1316.1074">ETLSource</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="685.57" x2="1252.57" y1="1327.9531" y2="1327.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="685.57" x2="1252.57" y1="1335.9531" y2="1335.9531"/><ellipse cx="695.57" cy="1347.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="704.57" y="1350.1636">isConnected() const : bool</text><ellipse cx="695.57" cy="1360.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="364" x="704.57" y="1362.9683">getLastMsgTime() const : std::chrono::system_clock::time_point</text><ellipse cx="695.57" cy="1373.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="704.57" y="1375.7729">setLastMsgTime() : void</text><ellipse cx="695.57" cy="1386.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="704.57" y="1388.5776">ETLSource() : void</text><ellipse cx="695.57" cy="1399.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="704.57" y="1401.3823">ETLSource() : void</text><ellipse cx="695.57" cy="1411.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="704.57" y="1414.187">hasLedger() const : bool</text><ellipse cx="695.57" cy="1424.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="704.57" y="1426.9917">setValidatedRange() : void</text><ellipse cx="695.57" cy="1437.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="704.57" y="1439.7964">getValidatedRange() const : std::string</text><ellipse cx="695.57" cy="1450.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="704.57" y="1452.6011">stop() : void</text><ellipse cx="695.57" cy="1463.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="445" x="704.57" y="1465.4058">fetchLedger() : std::pair&lt;grpc::Status,org::xrpl::rpc::v1::GetLedgerResponse&gt;</text><ellipse cx="695.57" cy="1475.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="704.57" y="1478.2104">toString() const : std::string</text><ellipse cx="695.57" cy="1488.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="704.57" y="1491.0151">toJson() const : Json::Value</text><ellipse cx="695.57" cy="1501.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="704.57" y="1503.8198">loadInitialLedger() : bool</text><ellipse cx="695.57" cy="1514.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="704.57" y="1516.6245">start() : void</text><ellipse cx="695.57" cy="1527.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="704.57" y="1529.4292">reconnect() : void</text><ellipse cx="695.57" cy="1539.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="704.57" y="1542.2339">onResolve() : void</text><ellipse cx="695.57" cy="1552.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="704.57" y="1555.0386">onConnect() : void</text><ellipse cx="695.57" cy="1565.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="704.57" y="1567.8433">onHandshake() : void</text><ellipse cx="695.57" cy="1578.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="704.57" y="1580.6479">onWrite() : void</text><ellipse cx="695.57" cy="1591.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="704.57" y="1593.4526">onRead() : void</text><ellipse cx="695.57" cy="1603.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="704.57" y="1606.2573">handleMessage() : bool</text><ellipse cx="695.57" cy="1616.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="704.57" y="1619.062">close() : void</text><ellipse cx="695.57" cy="1629.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="704.57" y="1631.8667">getP2pForwardingStub() const : std::unique_ptr&lt;org::xrpl::rpc::v1::XRPLedgerAPIService::Stub&gt;</text><ellipse cx="695.57" cy="1642.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="704.57" y="1644.6714">forwardToP2p() const : Json::Value</text><!--class C_0000721489797754593790--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="188.8516" id="C_0000721489797754593790" style="stroke: #A80036; stroke-width: 1.5;" width="569" x="654.57" y="294.9531"/><ellipse cx="881.82" cy="310.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M884.7888,316.5938 Q884.2106,316.8906 883.57,317.0313 Q882.9294,317.1875 882.2263,317.1875 Q879.7263,317.1875 878.3981,315.5469 Q877.0856,313.8906 877.0856,310.7656 Q877.0856,307.6406 878.3981,305.9844 Q879.7263,304.3281 882.2263,304.3281 Q882.9294,304.3281 883.57,304.4844 Q884.2263,304.6406 884.7888,304.9375 L884.7888,307.6563 Q884.1638,307.0781 883.57,306.8125 Q882.9763,306.5313 882.3513,306.5313 Q881.0075,306.5313 880.32,307.6094 Q879.6325,308.6719 879.6325,310.7656 Q879.6325,312.8594 880.32,313.9375 Q881.0075,315 882.3513,315 Q882.9763,315 883.57,314.7344 Q884.1638,314.4531 884.7888,313.875 L884.7888,316.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="902.32" y="315.1074">ETLLoadBalancer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="655.57" x2="1222.57" y1="326.9531" y2="326.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="655.57" x2="1222.57" y1="334.9531" y2="334.9531"/><ellipse cx="665.57" cy="346.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="674.57" y="349.1636">ETLLoadBalancer() : void</text><ellipse cx="665.57" cy="359.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="674.57" y="361.9683">add() : void</text><ellipse cx="665.57" cy="372.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="674.57" y="374.7729">add() : void</text><ellipse cx="665.57" cy="385.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="674.57" y="387.5776">loadInitialLedger() : void</text><ellipse cx="665.57" cy="398.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="394" x="674.57" y="400.3823">fetchLedger() : std::optional&lt;org::xrpl::rpc::v1::GetLedgerResponse&gt;</text><ellipse cx="665.57" cy="410.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="674.57" y="413.187">start() : void</text><ellipse cx="665.57" cy="423.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="674.57" y="425.9917">stop() : void</text><ellipse cx="665.57" cy="436.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="674.57" y="438.7964">shouldPropagateStream() const : bool</text><ellipse cx="665.57" cy="449.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="674.57" y="451.6011">toJson() const : Json::Value</text><ellipse cx="665.57" cy="462.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="543" x="674.57" y="464.4058">getP2pForwardingStub() const : std::unique_ptr&lt;org::xrpl::rpc::v1::XRPLedgerAPIService::Stub&gt;</text><ellipse cx="665.57" cy="474.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="674.57" y="477.2104">forwardToP2p() const : Json::Value</text><!--class C_0000126805538221204880--><rect fill="#FEFECE" filter="url(#fevql2wiim3kd)" height="188.8516" id="C_0000126805538221204880" style="stroke: #A80036; stroke-width: 1.5;" width="366" x="756.07" y="28.9531"/><ellipse cx="893.82" cy="44.9531" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M896.7888,50.5938 Q896.2106,50.8906 895.57,51.0313 Q894.9294,51.1875 894.2263,51.1875 Q891.7263,51.1875 890.3981,49.5469 Q889.0856,47.8906 889.0856,44.7656 Q889.0856,41.6406 890.3981,39.9844 Q891.7263,38.3281 894.2263,38.3281 Q894.9294,38.3281 895.57,38.4844 Q896.2263,38.6406 896.7888,38.9375 L896.7888,41.6563 Q896.1638,41.0781 895.57,40.8125 Q894.9763,40.5313 894.3513,40.5313 Q893.0075,40.5313 892.32,41.6094 Q891.6325,42.6719 891.6325,44.7656 Q891.6325,46.8594 892.32,47.9375 Q893.0075,49 894.3513,49 Q894.9763,49 895.57,48.7344 Q896.1638,48.4531 896.7888,47.875 L896.7888,50.5938 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="82" x="914.32" y="49.1074">ReportingETL</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="757.07" x2="1121.07" y1="60.9531" y2="60.9531"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="757.07" x2="1121.07" y1="68.9531" y2="68.9531"/><ellipse cx="767.07" cy="80.8555" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="776.07" y="83.1636">ReportingETL() : void</text><ellipse cx="767.07" cy="93.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="776.07" y="95.9683">~ReportingETL() : void</text><ellipse cx="767.07" cy="106.4648" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="776.07" y="108.7729">getNetworkValidatedLedgers() : NetworkValidatedLedgers &amp;</text><ellipse cx="767.07" cy="119.2695" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="776.07" y="121.5776">isStopping() const : bool</text><ellipse cx="767.07" cy="132.0742" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="776.07" y="134.3823">getNumMarkers() : uint32_t</text><ellipse cx="767.07" cy="144.8789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="776.07" y="147.187">getApplication() : Application &amp;</text><ellipse cx="767.07" cy="157.6836" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="776.07" y="159.9917">getJournal() : beast::Journal &amp;</text><ellipse cx="767.07" cy="170.4883" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="776.07" y="172.7964">getInfo() : Json::Value</text><ellipse cx="767.07" cy="183.293" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="776.07" y="185.6011">start() : void</text><ellipse cx="767.07" cy="196.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="776.07" y="198.4058">stop() : void</text><ellipse cx="767.07" cy="208.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="776.07" y="211.2104">getETLLoadBalancer() : ETLLoadBalancer &amp;</text><!--link C_0000364313548677557109 to C_0001270395620897132534--><path d="M305.01,1266.1931 C309.22,1532.0231 314.58,1870.8331 317.31,2043.0631 " fill="none" id="C_0000364313548677557109-C_0001270395620897132534" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="317.39,2048.1131,321.2351,2039.0459,317.3043,2043.1139,313.2363,2039.183,317.39,2048.1131" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0002178712016612181138 to C_0000126805538221204880--><path d="M890.19,1295.6331 C808.12,1101.2231 685.04,777.4131 637.07,483.9531 C623.52,401.0531 594.72,367.4931 637.07,294.9531 C663.24,250.1231 706.04,216.1531 751.3,190.8031 " fill="none" id="C_0002178712016612181138-C_0000126805538221204880" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="755.69,188.3831,745.8788,189.2437,751.3159,190.8053,749.7543,196.2423,755.69,188.3831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0002178712016612181138 to C_0000126805538221204880--><path d="M1084.89,1295.8631 C1227.17,1054.5431 1428.04,615.2131 1241.07,294.9531 C1214.9,250.1231 1172.1,216.1531 1126.84,190.8031 " fill="none" id="C_0002178712016612181138-C_0000126805538221204880" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1122.46,188.3831,1128.4153,196.2275,1126.8402,190.7944,1132.2733,189.2192,1122.46,188.3831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1309.07" y="387.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1319.07" y="394.02">etl_</text><!--link C_0002178712016612181138 to C_0001270395620897132534--><path d="M684.51,1617.6931 C573.75,1673.6831 472.38,1725.3231 470.07,1727.9531 C391.79,1817.1131 353.32,1949.5331 334.93,2043.1331 " fill="none" id="C_0002178712016612181138-C_0001270395620897132534" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="333.96,2048.1231,339.6112,2040.0569,334.9186,2043.2159,331.7596,2038.5232,333.96,2048.1231" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0002178712016612181138 to C_0001377976586182950689--><path d="M872.82,1651.1531 C859.27,1676.8131 845.67,1702.9831 833.07,1727.9531 C758.09,1876.5231 674.93,2057.8431 643.77,2126.4031 " fill="none" id="C_0002178712016612181138-C_0001377976586182950689" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="641.62,2131.1431,648.9857,2124.605,643.689,2126.5913,641.7028,2121.2946,641.62,2131.1431" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0002178712016612181138 to C_0000539094050509181559--><path d="M969.07,1651.3431 C969.07,1807.4131 969.07,2023.5731 969.07,2113.0831 " fill="none" id="C_0002178712016612181138-C_0000539094050509181559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="969.07,2118.2831,973.07,2109.2831,969.07,2113.2831,965.07,2109.2831,969.07,2118.2831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0002178712016612181138 to C_0001749398618357613571--><path d="M1067.67,1651.2031 C1081.01,1676.7331 1094.19,1702.8631 1106.07,1727.9531 C1166.8,1856.1331 1227.31,2011.2331 1258.81,2094.5631 " fill="none" id="C_0002178712016612181138-C_0001749398618357613571" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1260.65,2099.4531,1261.199,2089.6196,1258.8772,2094.778,1253.7188,2092.4561,1260.65,2099.4531" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1091.07" y="1687.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="168" x="1101.07" y="1694.02">networkValidatedLedgers_</text><!--link C_0002178712016612181138 to C_0000024089222317618888--><path d="M1253.85,1588.5631 C1325.22,1625.9031 1397.94,1672.3831 1456.07,1727.9531 C1460.88,1732.5431 1465.62,1737.2531 1470.3,1742.0631 " fill="none" id="C_0002178712016612181138-C_0000024089222317618888" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1473.86,1745.7631,1470.5112,1736.5011,1470.3967,1742.1568,1464.741,1742.0423,1473.86,1745.7631" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1414.07" y="1687.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="31" x="1424.07" y="1694.02">app_</text><!--link C_0000721489797754593790 to C_0000126805538221204880--><path d="M939.07,294.9331 C939.07,271.8031 939.07,246.9431 939.07,223.5531 " fill="none" id="C_0000721489797754593790-C_0000126805538221204880" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="939.07,218.2731,935.07,227.2731,939.07,223.2731,943.07,227.2731,939.07,218.2731" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000721489797754593790 to C_0000126805538221204880--><path d="M957.27,294.9031 C958.72,279.2531 959.24,263.1731 958.07,247.9531 C957.46,239.8931 956.62,231.5631 955.63,223.2131 " fill="none" id="C_0000721489797754593790-C_0000126805538221204880" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="955,218.0131,952.1104,227.4286,955.6008,222.9769,960.0525,226.4673,955,218.0131" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="961.07" y="254.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="971.07" y="261.02">etl_</text><!--link C_0000126805538221204880 to C_0000721489797754593790--><path d="M824.89,230.6031 C822.22,241.6931 822.54,253.2131 827.07,264.9531 C831.03,275.2131 836.28,285.1531 842.36,294.6331 " fill="none" id="C_0000126805538221204880-C_0000721489797754593790" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="829.11,218.2831,823.3812,222.6627,825.2205,229.6353,830.9493,225.2557,829.11,218.2831" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="830.07" y="254.0195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="840.07" y="261.02">loadBalancer_</text><!--link C_0000721489797754593790 to C_0001270395620897132534--><path d="M695.25,484.0031 C684.58,493.1131 674.74,503.0731 666.07,513.9531 C453.61,780.6531 584.4,932.3031 514.07,1265.9531 C455.01,1546.1731 381.78,1875.2131 344.09,2043.3131 " fill="none" id="C_0000721489797754593790-C_0001270395620897132534" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="342.98,2048.2431,348.8641,2040.3452,344.0813,2043.3659,341.0606,2038.5831,342.98,2048.2431" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000721489797754593790 to C_0001377976586182950689--><path d="M902.42,484.0931 C840.83,646.4131 718.29,991.8531 667.07,1295.9531 C612.8,1618.1831 625.05,2017.5431 629.71,2126.1031 " fill="none" id="C_0000721489797754593790-C_0001377976586182950689" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="629.94,2131.3531,633.5498,2122.1897,629.7253,2126.3577,625.5572,2122.5332,629.94,2131.3531" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000721489797754593790 to C_0002178712016612181138--><path d="M936.95,484.1631 C933.99,644.4831 930.66,981.6131 947.07,1265.9531 C947.54,1274.0031 948.09,1282.2231 948.71,1290.5131 " fill="none" id="C_0000721489797754593790-C_0002178712016612181138" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="949.1,1295.6931,952.4203,1286.4208,948.7285,1290.7069,944.4424,1287.0152,949.1,1295.6931" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000721489797754593790 to C_0002178712016612181138--><path d="M943.49,497.3431 C943.7,502.9631 943.89,508.5231 944.07,513.9531 C953.15,786.8031 960.86,1103.4331 965.22,1295.7731 " fill="none" id="C_0000721489797754593790-C_0002178712016612181138" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="943.01,484.1731,939.2301,490.3141,943.4449,496.1652,947.2248,490.0242,943.01,484.1731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="967.07" y="887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="57" x="977.07" y="894.52">sources_</text><!--link C_0000721489797754593790 to C_0000539094050509181559--><path d="M1024.44,484.0231 C1031.29,493.7731 1037.64,503.8231 1043.07,513.9531 C1214.02,833.0731 1218.96,937.6931 1271.07,1295.9531 C1296.79,1472.7631 1387.7,1560.9031 1273.07,1697.9531 C1224.69,1755.8031 1162.82,1678.2931 1106.07,1727.9531 C990.7,1828.9131 971.77,2027.2731 969.17,2113.1731 " fill="none" id="C_0000721489797754593790-C_0000539094050509181559" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="969.03,2118.4131,973.26,2109.5189,969.1585,2113.4148,965.2627,2109.3133,969.03,2118.4131" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000126805538221204880 to C_0000364313548677557109--><path d="M755.82,134.6031 C666.07,148.7231 562.63,180.0331 493.07,247.9531 C421.49,317.8531 376.11,413.1831 347.41,508.9431 " fill="none" id="C_0000126805538221204880-C_0000364313548677557109" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="345.97,513.7931,352.3772,506.3133,347.4002,509.002,344.7114,504.025,345.97,513.7931" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000126805538221204880 to C_0001270395620897132534--><path d="M756.01,142.8031 C545.14,175.4931 213.29,265.8131 101.07,513.9531 C-139.91,1046.8231 140.15,1769.4531 265.02,2043.1831 " fill="none" id="C_0000126805538221204880-C_0001270395620897132534" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="267.21,2047.9831,267.1017,2038.1349,265.1292,2043.4367,259.8274,2041.4642,267.21,2047.9831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000126805538221204880 to C_0001377976586182950689--><path d="M755.96,166.1631 C693.06,191.3931 631.95,231.5031 606.07,294.9531 C462.76,646.2731 603.68,1919.9631 627.71,2126.1631 " fill="none" id="C_0000126805538221204880-C_0001377976586182950689" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="628.33,2131.4031,631.273,2122.0043,627.7574,2126.436,623.3257,2122.9204,628.33,2131.4031" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000126805538221204880 to C_0000024089222317618888--><path d="M1122.1,130.5731 C1313.86,141.1331 1597.09,169.8631 1669.07,247.9531 C2030.02,639.5231 1950.75,1291.8031 1842,1722.5231 " fill="none" id="C_0000126805538221204880-C_0000024089222317618888" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="1840.72,1727.5831,1846.8103,1719.8431,1841.9495,1722.7366,1839.0559,1717.8759,1840.72,1727.5831" style="stroke: #A80036; stroke-width: 1.0;"/><!--link C_0000126805538221204880 to C_0000024089222317618888--><path d="M1122.24,162.4631 C1194.21,181.8831 1275.78,209.6831 1344.07,247.9531 C1432.99,297.7731 1553.05,396.1631 1604.07,513.9531 C1770.46,898.0931 1778.65,1380.7631 1755.32,1722.8431 " fill="none" id="C_0000126805538221204880-C_0000024089222317618888" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1754.97,1727.8731,1759.578,1719.1688,1755.313,1722.8849,1751.5969,1718.6199,1754.97,1727.8731" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1763.07" y="887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="31" x="1773.07" y="894.52">app_</text><!--link C_0000126805538221204880 to C_0001749398618357613571--><path d="M1135.04,157.5231 C1215.52,181.6431 1301.33,223.2631 1351.07,294.9531 C1439.98,423.1131 1418.75,1543.2231 1399.07,1697.9531 C1380.28,1845.7431 1328.57,2014.1231 1300.24,2099.1231 " fill="none" id="C_0000126805538221204880-C_0001749398618357613571" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1122.18,153.7931,1126.8312,159.3037,1133.7068,157.1298,1129.0556,151.6192,1122.18,153.7931" style="stroke: #A80036; stroke-width: 1.0;"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1419.07" y="887.5195"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="168" x="1429.07" y="894.52">networkValidatedLedgers_</text><!--
@startuml
title Class Diagram for app/reporting
class "STLedgerEntry" as C_0001270395620897132534
class C_0001270395620897132534 {
+STLedgerEntry() : void
+STLedgerEntry() : void
+STLedgerEntry() : void
+STLedgerEntry() : void
+STLedgerEntry() : void
+getSType() const : SerializedTypeID
+getFullText() const : std::string
+getText() const : std::string
+getJson() const : Json::Value
+key() const : const uint256 &
+getType() const : LedgerEntryType
+isThreadedType() const : bool
+thread() : bool
}
class "Ledger" as C_0000364313548677557109
class C_0000364313548677557109 {
+Ledger() : void
+operator=() : Ledger &
+Ledger() : void
+Ledger() : void
+Ledger() : void
+Ledger() : void
+Ledger() : void
+~Ledger() = default : void
+open() const : bool
+info() const : const LedgerInfo &
+setLedgerInfo() : void
+fees() const : const Fees &
+rules() const : const Rules &
+exists() const : bool
+exists() const : bool
+succ() const : std::optional<uint256>
+read() const : std::shared_ptr<const SLE>
+slesBegin() const : std::unique_ptr<sles_type::iter_base>
+slesEnd() const : std::unique_ptr<sles_type::iter_base>
+slesUpperBound() const : std::unique_ptr<sles_type::iter_base>
+txsBegin() const : std::unique_ptr<txs_type::iter_base>
+txsEnd() const : std::unique_ptr<txs_type::iter_base>
+txExists() const : bool
+txRead() const : ReadView::tx_type
+digest() const : std::optional<digest_type>
+rawErase() : void
+rawInsert() : void
+rawErase() : void
+rawReplace() : void
+rawDestroyXRP() : void
+rawTxInsert() : void
+rawTxInsertWithHash() : uint256
+setValidated() const : void
+setAccepted() : void
+setImmutable() : void
+isImmutable() const : bool
+setFull() const : void
+setTotalDrops() : void
+stateMap() const : const SHAMap &
+stateMap() : SHAMap &
+txMap() const : const SHAMap &
+txMap() : SHAMap &
+addSLE() : bool
+updateSkipList() : void
+walkLedger() const : bool
+assertSensible() const : bool
+invariants() const : void
+unshare() const : void
+negativeUNL() const : std::unordered_set<PublicKey>
+validatorToDisable() const : std::optional<PublicKey>
+validatorToReEnable() const : std::optional<PublicKey>
+updateNegativeUNL() : void
+isFlagLedger() const : bool
+isVotingLedger() const : bool
+peek() const : std::shared_ptr<SLE>
}
class "RPC::JsonContext" as C_0000539094050509181559
class C_0000539094050509181559 {
+params : Json::Value
+headers : RPC::JsonContext::Headers
}
abstract "Application" as C_0000024089222317618888
abstract C_0000024089222317618888 {
{abstract} +getMasterMutex() = 0 : Application::MutexType &
+Application() : void
+~Application() = default : void
{abstract} +setup() = 0 : bool
{abstract} +start() = 0 : void
{abstract} +run() = 0 : void
{abstract} +signalStop() = 0 : void
{abstract} +checkSigs() const = 0 : bool
{abstract} +checkSigs() = 0 : void
{abstract} +isStopping() const = 0 : bool
{abstract} +logs() = 0 : Logs &
{abstract} +config() = 0 : Config &
{abstract} +getIOService() = 0 : boost::asio::io_service &
{abstract} +getCollectorManager() = 0 : CollectorManager &
{abstract} +getNodeFamily() = 0 : Family &
{abstract} +getShardFamily() = 0 : Family *
{abstract} +timeKeeper() = 0 : TimeKeeper &
{abstract} +getJobQueue() = 0 : JobQueue &
{abstract} +getTempNodeCache() = 0 : NodeCache &
{abstract} +cachedSLEs() = 0 : CachedSLEs &
{abstract} +getAmendmentTable() = 0 : AmendmentTable &
{abstract} +getHashRouter() = 0 : HashRouter &
{abstract} +getFeeTrack() = 0 : LoadFeeTrack &
{abstract} +getLoadManager() = 0 : LoadManager &
{abstract} +overlay() = 0 : Overlay &
{abstract} +getTxQ() = 0 : TxQ &
{abstract} +validators() = 0 : ValidatorList &
{abstract} +validatorSites() = 0 : ValidatorSite &
{abstract} +validatorManifests() = 0 : ManifestCache &
{abstract} +publisherManifests() = 0 : ManifestCache &
{abstract} +cluster() = 0 : Cluster &
{abstract} +peerReservations() = 0 : PeerReservationTable &
{abstract} +getValidations() = 0 : RCLValidations &
{abstract} +getNodeStore() = 0 : NodeStore::Database &
{abstract} +getShardStore() = 0 : NodeStore::DatabaseShard *
{abstract} +getShardArchiveHandler() = 0 : RPC::ShardArchiveHandler *
{abstract} +getInboundLedgers() = 0 : InboundLedgers &
{abstract} +getInboundTransactions() = 0 : InboundTransactions &
{abstract} +getAcceptedLedgerCache() = 0 : TaggedCache<uint256,AcceptedLedger> &
{abstract} +getLedgerMaster() = 0 : LedgerMaster &
{abstract} +getLedgerCleaner() = 0 : LedgerCleaner &
{abstract} +getLedgerReplayer() = 0 : LedgerReplayer &
{abstract} +getOPs() = 0 : NetworkOPs &
{abstract} +getOrderBookDB() = 0 : OrderBookDB &
{abstract} +getMasterTransaction() = 0 : TransactionMaster &
{abstract} +getPerfLog() = 0 : perf::PerfLog &
{abstract} +nodeIdentity() = 0 : const std::pair<PublicKey,SecretKey> &
{abstract} +getValidationPublicKey() const = 0 : const PublicKey &
{abstract} +getResourceManager() = 0 : Resource::Manager &
{abstract} +getPathRequests() = 0 : PathRequests &
{abstract} +getSHAMapStore() = 0 : SHAMapStore &
{abstract} +pendingSaves() = 0 : PendingSaves &
{abstract} +accountIDCache() const = 0 : const AccountIDCache &
{abstract} +openLedger() = 0 : OpenLedger &
{abstract} +openLedger() const = 0 : const OpenLedger &
{abstract} +getRelationalDatabase() = 0 : RelationalDatabase &
{abstract} +getIOLatency() = 0 : std::chrono::milliseconds
{abstract} +getReportingETL() = 0 : ReportingETL &
{abstract} +serverOkay() = 0 : bool
{abstract} +journal() = 0 : beast::Journal
{abstract} +fdRequired() const = 0 : int
{abstract} +getWalletDB() = 0 : DatabaseCon &
{abstract} +getMaxDisallowedLedger() = 0 : LedgerIndex
}
class "NetworkValidatedLedgers" as C_0001749398618357613571
class C_0001749398618357613571 {
+push() : void
+getMostRecent() const : std::optional<uint32_t>
+tryGetMostRecent() const : std::optional<uint32_t>
+waitUntilValidatedByNetwork() : bool
+stop() : void
}
class "ThreadSafeQueue<std::shared_ptr<SLE>>" as C_0001377976586182950689
class C_0001377976586182950689 {
}
class "ETLSource" as C_0002178712016612181138
class C_0002178712016612181138 {
+isConnected() const : bool
+getLastMsgTime() const : std::chrono::system_clock::time_point
+setLastMsgTime() : void
+ETLSource() : void
+ETLSource() : void
+hasLedger() const : bool
+setValidatedRange() : void
+getValidatedRange() const : std::string
+stop() : void
+fetchLedger() : std::pair<grpc::Status,org::xrpl::rpc::v1::GetLedgerResponse>
+toString() const : std::string
+toJson() const : Json::Value
+loadInitialLedger() : bool
+start() : void
+reconnect() : void
+onResolve() : void
+onConnect() : void
+onHandshake() : void
+onWrite() : void
+onRead() : void
+handleMessage() : bool
+close() : void
+getP2pForwardingStub() const : std::unique_ptr<org::xrpl::rpc::v1::XRPLedgerAPIService::Stub>
+forwardToP2p() const : Json::Value
}
class "ETLLoadBalancer" as C_0000721489797754593790
class C_0000721489797754593790 {
+ETLLoadBalancer() : void
+add() : void
+add() : void
+loadInitialLedger() : void
+fetchLedger() : std::optional<org::xrpl::rpc::v1::GetLedgerResponse>
+start() : void
+stop() : void
+shouldPropagateStream() const : bool
+toJson() const : Json::Value
+getP2pForwardingStub() const : std::unique_ptr<org::xrpl::rpc::v1::XRPLedgerAPIService::Stub>
+forwardToP2p() const : Json::Value
}
class "ReportingETL" as C_0000126805538221204880
class C_0000126805538221204880 {
+ReportingETL() : void
+~ReportingETL() : void
+getNetworkValidatedLedgers() : NetworkValidatedLedgers &
+isStopping() const : bool
+getNumMarkers() : uint32_t
+getApplication() : Application &
+getJournal() : beast::Journal &
+getInfo() : Json::Value
+start() : void
+stop() : void
+getETLLoadBalancer() : ETLLoadBalancer &
}
C_0000364313548677557109 ..> C_0001270395620897132534
C_0002178712016612181138 ..> C_0000126805538221204880
C_0002178712016612181138 ..> C_0001270395620897132534
C_0002178712016612181138 ..> C_0001377976586182950689
C_0002178712016612181138 ..> C_0000539094050509181559
C_0002178712016612181138 - -> C_0000126805538221204880 : -etl_
C_0002178712016612181138 - -> C_0001749398618357613571 : -networkValidatedLedgers_
C_0002178712016612181138 - -> C_0000024089222317618888 : -app_
C_0000721489797754593790 ..> C_0000126805538221204880
C_0000721489797754593790 ..> C_0001270395620897132534
C_0000721489797754593790 ..> C_0001377976586182950689
C_0000721489797754593790 ..> C_0002178712016612181138
C_0000721489797754593790 ..> C_0000539094050509181559
C_0000721489797754593790 - -> C_0000126805538221204880 : -etl_
C_0000721489797754593790 o- - C_0002178712016612181138 : -sources_
C_0000126805538221204880 ..> C_0000364313548677557109
C_0000126805538221204880 ..> C_0001270395620897132534
C_0000126805538221204880 ..> C_0001377976586182950689
C_0000126805538221204880 ..> C_0000024089222317618888
C_0000126805538221204880 - -> C_0000024089222317618888 : -app_
C_0000126805538221204880 o- - C_0000721489797754593790 : -loadBalancer_
C_0000126805538221204880 o- - C_0001749398618357613571 : -networkValidatedLedgers_
@enduml

PlantUML version 1.2018.13(Mon Nov 26 17:11:51 UTC 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.17+8-post-Ubuntu-1ubuntu220.04
Operating System: Linux
OS Version: 5.4.0-91-generic
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>