diff --git a/CMakeLists.txt b/CMakeLists.txt
index ec59d4491..f7e7812b5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -101 +100,0 @@ if(MSVC)
-  option(WITH_GFLAGS "build with GFlags" OFF)
@@ -103 +102,6 @@ if(MSVC)
-  include(${CMAKE_CURRENT_SOURCE_DIR}/thirdparty.inc)
+endif()
+
+if(CMAKE_SYSTEM_NAME MATCHES "FreeBSD" AND NOT CMAKE_SYSTEM_NAME MATCHES "kFreeBSD")
+  # FreeBSD has jemalloc as default malloc
+  # but it does not have all the jemalloc files in include/...
+  set(WITH_JEMALLOC ON)
@@ -105,10 +109,4 @@ else()
-  if(CMAKE_SYSTEM_NAME MATCHES "FreeBSD" AND NOT CMAKE_SYSTEM_NAME MATCHES "kFreeBSD")
-    # FreeBSD has jemalloc as default malloc
-    # but it does not have all the jemalloc files in include/...
-    set(WITH_JEMALLOC ON)
-  else()
-    if(WITH_JEMALLOC)
-      find_package(JeMalloc REQUIRED)
-      add_definitions(-DROCKSDB_JEMALLOC -DJEMALLOC_NO_DEMANGLE)
-      list(APPEND THIRDPARTY_LIBS JeMalloc::JeMalloc)
-    endif()
+  if(WITH_JEMALLOC)
+    find_package(JeMalloc REQUIRED)
+    add_definitions(-DROCKSDB_JEMALLOC -DJEMALLOC_NO_DEMANGLE)
+    list(APPEND THIRDPARTY_LIBS JeMalloc::JeMalloc)
@@ -115,0 +114 @@ else()
+endif()
@@ -117,18 +116,14 @@ else()
-  if(MINGW)
-    option(WITH_GFLAGS "build with GFlags" OFF)
-  else()
-    option(WITH_GFLAGS "build with GFlags" ON)
-  endif()
-  set(GFLAGS_LIB)
-  if(WITH_GFLAGS)
-    # Config with namespace available since gflags 2.2.2
-    option(GFLAGS_USE_TARGET_NAMESPACE "Use gflags import target with namespace." ON)
-    find_package(gflags CONFIG)
-    if(gflags_FOUND)
-      if(TARGET ${GFLAGS_TARGET})
-        # Config with GFLAGS_TARGET available since gflags 2.2.0
-        set(GFLAGS_LIB ${GFLAGS_TARGET})
-      else()
-        # Config with GFLAGS_LIBRARIES available since gflags 2.1.0
-        set(GFLAGS_LIB ${gflags_LIBRARIES})
-      endif()
+if(MINGW OR MSVC)
+  option(WITH_GFLAGS "build with GFlags" OFF)
+else()
+  option(WITH_GFLAGS "build with GFlags" ON)
+endif()
+set(GFLAGS_LIB)
+if(WITH_GFLAGS)
+  # Config with namespace available since gflags 2.2.2
+  option(GFLAGS_USE_TARGET_NAMESPACE "Use gflags import target with namespace." ON)
+  find_package(gflags CONFIG)
+  if(gflags_FOUND)
+    if(TARGET ${GFLAGS_TARGET})
+      # Config with GFLAGS_TARGET available since gflags 2.2.0
+      set(GFLAGS_LIB ${GFLAGS_TARGET})
@@ -136,2 +131,2 @@ else()
-      find_package(gflags REQUIRED)
-      set(GFLAGS_LIB gflags::gflags)
+      # Config with GFLAGS_LIBRARIES available since gflags 2.1.0
+      set(GFLAGS_LIB ${gflags_LIBRARIES})
@@ -139,3 +134,3 @@ else()
-    include_directories(${GFLAGS_INCLUDE_DIR})
-    list(APPEND THIRDPARTY_LIBS ${GFLAGS_LIB})
-    add_definitions(-DGFLAGS=1)
+  else()
+    find_package(gflags REQUIRED)
+    set(GFLAGS_LIB gflags::gflags)
@@ -142,0 +138,4 @@ else()
+  include_directories(${GFLAGS_INCLUDE_DIR})
+  list(APPEND THIRDPARTY_LIBS ${GFLAGS_LIB})
+  add_definitions(-DGFLAGS=1)
+endif()
@@ -144,7 +143,4 @@ else()
-  if(WITH_SNAPPY)
-    find_package(Snappy CONFIG)
-    if(NOT Snappy_FOUND)
-      find_package(Snappy REQUIRED)
-    endif()
-    add_definitions(-DSNAPPY)
-    list(APPEND THIRDPARTY_LIBS Snappy::snappy)
+if(WITH_SNAPPY)
+  find_package(Snappy CONFIG)
+  if(NOT Snappy_FOUND)
+    find_package(Snappy REQUIRED)
@@ -151,0 +148,3 @@ else()
+  add_definitions(-DSNAPPY)
+  list(APPEND THIRDPARTY_LIBS Snappy::snappy)
+endif()
@@ -153,5 +152,5 @@ else()
-  if(WITH_ZLIB)
-    find_package(ZLIB REQUIRED)
-    add_definitions(-DZLIB)
-    list(APPEND THIRDPARTY_LIBS ZLIB::ZLIB)
-  endif()
+if(WITH_ZLIB)
+  find_package(ZLIB REQUIRED)
+  add_definitions(-DZLIB)
+  list(APPEND THIRDPARTY_LIBS ZLIB::ZLIB)
+endif()
@@ -159,10 +158,8 @@ else()
-  option(WITH_BZ2 "build with bzip2" OFF)
-  if(WITH_BZ2)
-    find_package(BZip2 REQUIRED)
-    add_definitions(-DBZIP2)
-    if(BZIP2_INCLUDE_DIRS)
-      include_directories(${BZIP2_INCLUDE_DIRS})
-    else()
-      include_directories(${BZIP2_INCLUDE_DIR})
-    endif()
-    list(APPEND THIRDPARTY_LIBS ${BZIP2_LIBRARIES})
+option(WITH_BZ2 "build with bzip2" OFF)
+if(WITH_BZ2)
+  find_package(BZip2 REQUIRED)
+  add_definitions(-DBZIP2)
+  if(BZIP2_INCLUDE_DIRS)
+    include_directories(${BZIP2_INCLUDE_DIRS})
+  else()
+    include_directories(${BZIP2_INCLUDE_DIR})
@@ -169,0 +167,2 @@ else()
+  list(APPEND THIRDPARTY_LIBS ${BZIP2_LIBRARIES})
+endif()
@@ -171,5 +170,5 @@ else()
-  if(WITH_LZ4)
-    find_package(lz4 REQUIRED)
-    add_definitions(-DLZ4)
-    list(APPEND THIRDPARTY_LIBS lz4::lz4)
-  endif()
+if(WITH_LZ4)
+  find_package(lz4 REQUIRED)
+  add_definitions(-DLZ4)
+  list(APPEND THIRDPARTY_LIBS lz4::lz4)
+endif()
@@ -177,6 +176,5 @@ else()
-  if(WITH_ZSTD)
-    find_package(zstd REQUIRED)
-    add_definitions(-DZSTD)
-    include_directories(${ZSTD_INCLUDE_DIR})
-    list(APPEND THIRDPARTY_LIBS zstd::zstd)
-  endif()
+if(WITH_ZSTD)
+  find_package(zstd REQUIRED)
+  add_definitions(-DZSTD)
+  include_directories(${ZSTD_INCLUDE_DIR})
+  list(APPEND THIRDPARTY_LIBS zstd::zstd)
