# This workflow builds and tests the binary for various configurations.
name: Build and test

# This workflow can only be triggered by other workflows.
on:
  workflow_call:
    inputs:
      build_dir:
        description: 'The directory where to build.'
        required: false
        type: string
        default: '.build'
      conan_remote_name:
        description: 'The name of the Conan remote to use.'
        required: true
        type: string
      conan_remote_url:
        description: 'The URL of the Conan endpoint to use.'
        required: true
        type: string
      dependencies_force_build:
        description: 'Force building of all dependencies.'
        required: false
        type: boolean
        default: false
      dependencies_force_upload:
        description: 'Force uploading of all dependencies.'
        required: false
        type: boolean
        default: false
      os:
        description: 'The operating system to use for the build (linux, macos, or windows).'
        required: true
        type: string
      strategy_matrix_all:
        description: 'Generate a strategy matrix containing all configurations.'
        required: false
        type: boolean
        default: false
    secrets:
      codecov_token:
        description: 'The Codecov token to use for uploading coverage reports.'
        required: false
      conan_remote_username:
        description: 'The username for logging into the Conan remote. If not provided, the dependencies will not be uploaded.'
        required: false
      conan_remote_password:
        description: 'The password for logging into the Conan remote. If not provided, the dependencies will not be uploaded.'
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.os }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  echo:
    runs-on: ubuntu-latest
    steps:
      - name: Echo inputs
        run: |
          echo "Build directory: ${{ inputs.build_dir }}"
          echo "Conan remote name: ${{ inputs.conan_remote_name }}"
          echo "Conan remote URL: ${{ inputs.conan_remote_url }}"
          echo "Force build dependencies: ${{ inputs.dependencies_force_build }}"
          echo "Force upload dependencies: ${{ inputs.dependencies_force_upload }}"
          echo "Operating system: ${{ inputs.os }}"
          echo "Strategy matrix all: ${{ inputs.strategy_matrix_all }}"
  
