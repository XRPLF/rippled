name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    branches: [ develop, release, master ]
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: [ "self-hosted", "Linux", "X64", "heavy" ]
    container: 'ghcr.io/xrplf/ci/ubuntu-noble:clang-19'

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Check configuration (Linux and MacOS)
        run: |
          echo 'Checking path.'
          echo ${PATH} | tr ':' '\n'

          echo 'Checking environment variables.'
          env | sort

          echo 'Checking CMake version.'
          cmake --version

          echo 'Checking compiler version.'

          echo 'Checking Conan version.'
          conan --version

          echo 'Checking Ninja version.'
          ninja --version

          echo 'Checking nproc version.'
          nproc --version
      - name: Set up Conan configuration
        run: |
          echo 'Installing configuration.'
          cat conan/global.conf >> $(conan config home)/global.conf

          echo 'Conan configuration:'
          conan config show '*'
      - name: Set up Conan profile
        run: |
          echo 'Installing profile.'
          conan config install conan/profiles/default -tf $(conan config home)/profiles/

          echo 'Conan profile:'
          conan profile show
      - name: Set up Conan remote
        shell: bash
        run: |
          echo "Adding Conan remote '${{ env.CONAN_REMOTE_NAME }}' at ${{ env.CONAN_REMOTE_URL }}."
          conan remote add --index 0 --force ${{ env.CONAN_REMOTE_NAME }} ${{ env.CONAN_REMOTE_URL }}

          echo 'Listing Conan remotes.'
          conan remote list
      - name: Build dependencies
        uses: ./.github/actions/build-deps
        with:
          build_dir: .build
          build_type: Debug
          conan_remote_name: ${{ env.CONAN_REMOTE_NAME }}
          conan_remote_url: ${{ env.CONAN_REMOTE_URL }}
          conan_remote_username: ${{ secrets.conan_remote_username }}
          conan_remote_password: ${{ secrets.conan_remote_password }}
          force_build: false
          force_upload: false

