name: macos
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  push:
    # If the branches list is ever changed, be sure to change it on all
    # build/test jobs (nix, macos, windows, instrumentation)
    branches:
      # Always build the package branches
      - develop
      - release
      - master
      # Branches that opt-in to running
      - 'ci/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test:
    if: ${{ github.event_name == 'push' || github.event.pull_request.draft != true || contains(github.event.pull_request.labels.*.name, 'DraftRunCI') }}
    name: macOS ${{ matrix.configuration }} ${{ matrix.generator }}
    strategy:
      matrix:
        platform:
          - macos
        generator:
          - Ninja
        configuration:
          - Release
    runs-on: [self-hosted, macOS]
    env:
      # The `build` action requires these variables.
      build_dir: .build
      NUM_PROCESSORS: 12
    steps:
      - name: clean workspace
        run: |
          rm -rf ${{ env.build_dir }}
          rm -rf $(conan config home)

      - name: checkout
        uses: actions/checkout@v4

      - name: install Conan
        run: |
          brew install conan
          echo '/opt/homebrew/opt/conan/bin' >> $GITHUB_PATH

      - name: install Ninja
        if: matrix.generator == 'Ninja'
        run: brew install ninja

      - name: install python
        run: |

          if command -v python3 >/dev/null 2>&1; then
              echo "python3 executable exists"
              if ! command -v python >/dev/null 2>&1; then
                echo "python symlink does not exist"
                ln -s /opt/homebrew/bin/python3 /opt/homebrew/bin/python
              fi
          else
              echo "No Python!!!"
              brew install python@3.13
              ln -s /opt/homebrew/bin/python3 /opt/homebrew/bin/python
          fi
          python --version

      - name: install cmake
        run: |
          if command -v cmake > /dev/null 2>&1; then
              echo "CMake executable exists"
          else
              brew install cmake
          fi

      - name: install nproc
        run: |
          brew install coreutils

      - name: check environment
        run: |
          env | sort
          echo ${PATH} | tr ':' '\n'
          python --version
          conan --version
          cmake --version
          nproc --version
          echo -n "nproc returns: "
          nproc
          system_profiler SPHardwareDataType
          sysctl -n hw.logicalcpu
          clang --version

      - name: Configure Conan
        uses: ./.github/actions/conan_configure
        env:
          CONAN_URL: http://18.143.149.228:8081/artifactory/api/conan/dev
        with:
          profile: Macos-clang-17-Release

      - name: build dependencies
        uses: ./.github/actions/dependencies
        env:
          CONAN_URL: http://18.143.149.228:8081/artifactory/api/conan/dev
        with:
          profile: Macos-clang-17-Release
      - name: build
        uses: ./.github/actions/build
        with:
          generator: ${{ matrix.generator }}
          configuration: ${{ matrix.configuration }}
          cmake-args: "-Dxrpld=TRUE -Dtests=TRUE -Dassert=TRUE -Dwerr=TRUE ${{ matrix.cmake-args }}"

      - name: test
        run: |
          n=$(nproc)
          echo "Using $n test jobs"

          cd ${build_dir}
          ./rippled --unittest --unittest-jobs $n
          ctest -j $n --output-on-failure
