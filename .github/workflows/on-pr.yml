# This workflow runs all workflows to check, build and test the project on
# various Linux flavors, as well as on MacOS and Windows, on every push to a
# user branch. However, it will not run if the pull request is a draft unless it
# has the 'DraftRunCI' label.
name: PR

on:
  pull_request:
    branches:
      - develop
      - release
      - master
    paths:
      - '.github/actions/build-deps/**'
      - '.github/actions/build-test/**'
      - '.github/scripts/levelization/**'
      - '.github/scripts/strategy-matrix/**'
      - '.github/workflows/build-test.yml'
      - '.github/workflows/check-format.yml'
      - '.github/workflows/check-levelization.yml'
      - '.github/workflows/notify-clio.yml'
      - '.github/workflows/on-pr.yml'
      # Keep the list of paths below in sync with those below and also in the
      # `on-trigger.yml` file.
      - 'cmake/**'
      - 'conan/**'
      - 'external/**'
      - 'include/**'
      - 'src/**'
      - 'tests/**'
      - '.clang-format'
      - '.codecov.yml'
      - '.pre-commit-config.yaml'
      - 'CMakeLists.txt'
      - 'conanfile.py'
  push:
    branches:
      - develop
      - release
      - master
    paths:
      - '.github/actions/build-deps/**'
      - '.github/actions/build-test/**'
      - '.github/scripts/levelization/**'
      - '.github/scripts/strategy-matrix/**'
      - '.github/workflows/build-test.yml'
      - '.github/workflows/check-format.yml'
      - '.github/workflows/check-levelization.yml'
      - '.github/workflows/notify-clio.yml'
      - '.github/workflows/on-pr.yml'
      # Keep the list of paths below in sync with those above and also in the
      # `on-trigger.yml` file.
      - 'cmake/**'
      - 'conan/**'
      - 'external/**'
      - 'include/**'
      - 'src/**'
      - 'tests/**'
      - '.clang-format'
      - '.codecov.yml'
      - '.pre-commit-config.yaml'
      - 'CMakeLists.txt'
      - 'conanfile.py'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CONAN_REMOTE_NAME: xrplf
  CONAN_REMOTE_URL: https://conan.ripplex.io

jobs:
  check-clang-format:
    if: ${{ github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'DraftRunCI') }}
    uses: ./.github/workflows/check-format.yml

  check-levelization:
    if: ${{ github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'DraftRunCI') }}
    uses: ./.github/workflows/check-levelization.yml

  # This job works around the limitation that GitHub Actions does not support
  # using environment variables as inputs for reusable workflows.
  generate-outputs:
    runs-on: ubuntu-latest
    steps:
      - name: No-op
        run: echo ''
    outputs:
      conan_remote_name: ${{ env.CONAN_REMOTE_NAME }}
      conan_remote_url: ${{ env.CONAN_REMOTE_URL }}

  build-linux:
    needs: generate-outputs
    if: ${{ github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'DraftRunCI') }}
    uses: ./.github/workflows/build-test.yml
    with:
      conan_remote_name: ${{ needs.generate-outputs.outputs.conan_remote_name }}
      conan_remote_url: ${{ needs.generate-outputs.outputs.conan_remote_url }}
      os: 'linux'
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}

  build-macos:
    needs: generate-outputs
    if: ${{ github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'DraftRunCI') }}
    uses: ./.github/workflows/build-test.yml
    with:
      conan_remote_name: ${{ needs.generate-outputs.outputs.conan_remote_name }}
      conan_remote_url: ${{ needs.generate-outputs.outputs.conan_remote_url }}
      os: 'macos'

  build-windows:
    needs: generate-outputs
    if: ${{ github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'DraftRunCI') }}
    uses: ./.github/workflows/build-test.yml
    with:
      conan_remote_name: ${{ needs.generate-outputs.outputs.conan_remote_name }}
      conan_remote_url: ${{ needs.generate-outputs.outputs.conan_remote_url }}
      os: 'windows'

  notify-clio:
    needs:
      - generate-outputs
      - build-linux
      - build-macos
      - build-windows
    uses: ./.github/workflows/notify-clio.yml
    with:
      conan_remote_name: ${{ needs.generate-outputs.outputs.conan_remote_name }}
      conan_remote_url: ${{ needs.generate-outputs.outputs.conan_remote_url }}
    secrets:
      clio_notify_token: ${{ secrets.CLIO_NOTIFY_TOKEN }}
      conan_remote_username: ${{ secrets.CONAN_REMOTE_USERNAME }}
      conan_remote_password: ${{ secrets.CONAN_REMOTE_PASSWORD }}
