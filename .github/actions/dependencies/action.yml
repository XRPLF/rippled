name: dependencies
inputs:
  configuration:
    required: true
# An implicit input is the environment variable `build_dir`.
runs:
  using: composite
  steps:
    - name: Conan profile
      shell: bash
      run : |
        echo '```' >> "${GITHUB_STEP_SUMMARY}"
        conan profile show --profile default | tee -a "${GITHUB_STEP_SUMMARY}"
        echo '```' >> "${GITHUB_STEP_SUMMARY}"
    - name: add Ripple Conan remote
      shell: bash
      run: |
        conan remote list
        conan remote remove ripple || true
        # Do not quote the URL. An empty string will be accepted (with
        # a non-fatal warning), but a missing argument will not.
        conan remote add --index 0 ripple ${{ env.CONAN_URL }}
    - name: try to authenticate to Ripple Conan remote
      id: remote
      shell: bash
      run: |
        # `conan remote auth` implicitly uses the environment variables
        # CONAN_LOGIN_USERNAME_<REMOTE> and CONAN_PASSWORD_<REMOTE>.
        # https://docs.conan.io/2/reference/commands/remote.html
        conan remote auth ripple
        echo outcome=$((conan remote login ripple 2>&1 | tee output | grep -q error) \
          && echo failure || echo success) | tee ${GITHUB_OUTPUT}
        cat output
    - name: list missing binaries
      id: binaries
      shell: bash
      # Print the list of dependencies that would need to be built locally.
      # A non-empty list means we have "failed" to cache binaries remotely.
      run: |
        echo missing=$(conan info . --build missing --settings build_type=${{ inputs.configuration }} --json 2>/dev/null  | grep '^\[') | tee ${GITHUB_OUTPUT}
    - name: install dependencies
      shell: bash
      run: |
        mkdir ${build_dir}
        cd ${build_dir}
        conan install \
          --output-folder . \
          --build missing \
          --settings build_type=${{ inputs.configuration }} \
          ..
    - name: upload dependencies to remote
      if: false && (steps.binaries.outputs.missing != '[]') && (steps.remote.outputs.outcome == 'success')
      shell: bash
      run: conan upload --remote ripple --confirm '*'
