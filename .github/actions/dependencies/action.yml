name: dependencies
inputs:
  configuration:
    required: true
# Implicit inputs are the environment variables `build_dir`, CONAN_REMOTE_URL,
# CONAN_REMOTE_USERNAME, and CONAN_REMOTE_PASSWORD. The latter three are only
# used to upload newly built dependencies to the Conan remote.
runs:
  using: composite
  steps:
    - name: add Conan remote
      if: env.CONAN_REMOTE_URL != ''
      shell: bash
      run: |
        if conan remote list | grep -q 'xrplf'; then
          conan remote update --index 0 --url ${{ env.CONAN_REMOTE_URL }} xrplf
          echo "Updated Conan remote 'xrplf' to ${{ env.CONAN_REMOTE_URL }}."
        else
          conan remote add --index 0 xrplf ${{ env.CONAN_REMOTE_URL }}
          echo "Added new Conan remote 'xrplf' at ${{ env.CONAN_REMOTE_URL }}."
        fi
    - name: install dependencies
      shell: bash
      run: |
        mkdir ${{ env.build_dir }}
        cd ${{ env.build_dir }}
        conan install \
          --output-folder . \
          --build missing \
          --options:host "&:tests=True" \
          --options:host "&:xrpld=True" \
          --settings:all build_type=${{ inputs.configuration }} \
          --format=json .. > build.json
    - name: upload dependencies
      #if: ${{ env.CONAN_REMOTE_URL != '' && env.CONAN_REMOTE_USERNAME != '' && env.CONAN_REMOTE_PASSWORD != '' && github.ref_type == 'branch' && github.ref_name == github.event.repository.default_branch }}
      shell: bash
      working-directory: ${{ env.build_dir }}
      run: |
        echo "Logging into Conan remote 'xrplf' at ${{ env.CONAN_REMOTE_URL }}."
        conan remote login xrplf "${{ env.CONAN_REMOTE_USERNAME }}" --password "${{ env.CONAN_REMOTE_PASSWORD }}"
        echo "Uploading missing dependencies."
        conan list --graph=build.json --graph-binaries=build --format=json > pkgs.json
        conan upload --list=pkgs.json --confirm --check --remote xrplf
